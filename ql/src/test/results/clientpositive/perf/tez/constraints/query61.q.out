Warning: Map Join MAPJOIN[158][bigTable=?] in task 'Reducer 4' is a cross product
PREHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@mv_store_sales_item_customer
PREHOOK: Input: default@promotion
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@mv_store_sales_item_customer
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 13 (BROADCAST_EDGE)
Map 6 <- Map 1 (BROADCAST_EDGE), Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Map 8 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE), Reducer 7 (BROADCAST_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_218]
        Limit [LIM_217] (rows=1 width=336)
          Number of rows:100
          Select Operator [SEL_216] (rows=1 width=336)
            Output:["_col0","_col1","_col2"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_215]
              Select Operator [SEL_214] (rows=1 width=336)
                Output:["_col0","_col1","_col2"]
                Map Join Operator [MAPJOIN_213] (rows=1 width=448)
                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                <-Reducer 7 [BROADCAST_EDGE] vectorized
                  BROADCAST [RS_210]
                    Select Operator [SEL_209] (rows=1 width=224)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_208] (rows=1 width=112)
                        Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                      <-Map 6 [CUSTOM_SIMPLE_EDGE] vectorized
                        PARTITION_ONLY_SHUFFLE [RS_197]
                          Group By Operator [GBY_196] (rows=1 width=112)
                            Output:["_col0"],aggregations:["sum(_col5)"]
                            Map Join Operator [MAPJOIN_195] (rows=1 width=112)
                              Conds:MAPJOIN_194._col6=RS_180._col0(Inner),HybridGraceHashJoin:true,Output:["_col5"]
                            <-Map 9 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_180]
                                PartitionCols:_col0
                                Select Operator [SEL_178] (rows=50 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_177] (rows=50 width=12)
                                    predicate:((d_moy = 11) and (d_year = 1999))
                                    TableScan [TS_9] (rows=73049 width=12)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                            <-Map Join Operator [MAPJOIN_194] (rows=1 width=116)
                                Conds:MAPJOIN_193._col3=RS_188._col0(Inner),HybridGraceHashJoin:true,Output:["_col5","_col6"]
                              <-Map 11 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_188]
                                  PartitionCols:_col0
                                  Select Operator [SEL_186] (rows=341 width=4)
                                    Output:["_col0"]
                                    Filter Operator [FIL_185] (rows=341 width=115)
                                      predicate:(s_gmt_offset = -7)
                                      TableScan [TS_15] (rows=1704 width=115)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_gmt_offset"]
                              <-Map Join Operator [MAPJOIN_193] (rows=1 width=120)
                                  Conds:MAPJOIN_192._col2=RS_184._col0(Inner),HybridGraceHashJoin:true,Output:["_col3","_col5","_col6"]
                                <-Map 10 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_184]
                                    PartitionCols:_col0
                                    Select Operator [SEL_182] (rows=46200 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_181] (rows=46200 width=94)
                                        predicate:(i_category = 'Electronics')
                                        TableScan [TS_12] (rows=462000 width=94)
                                          default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                                <-Map Join Operator [MAPJOIN_192] (rows=1 width=124)
                                    Conds:RS_176._col1=SEL_190._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col5","_col6"]
                                  <-Map 1 [BROADCAST_EDGE] vectorized
                                    SHUFFLE [RS_176]
                                      PartitionCols:_col1
                                      Map Join Operator [MAPJOIN_175] (rows=1 width=128)
                                        Conds:SEL_173._col0=RS_171._col2(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col5","_col6"]
                                      <-Map 13 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_171]
                                          PartitionCols:_col2
                                          Select Operator [SEL_170] (rows=1 width=128)
                                            Output:["_col0","_col1","_col2","_col3","_col4"]
                                            Filter Operator [FIL_169] (rows=1 width=128)
                                              predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                              TableScan [TS_48] (rows=1 width=128)
                                                default@mv_store_sales_item_customer,default.mv_store_sales_item_customer,Tbl:COMPLETE,Col:PARTIAL,Output:["ss_item_sk","ss_store_sk","ss_customer_sk","ss_ext_sales_price"]
                                      <-Select Operator [SEL_173] (rows=80000000 width=8)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_172] (rows=80000000 width=8)
                                            predicate:c_current_addr_sk is not null
                                            TableScan [TS_0] (rows=80000000 width=8)
                                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                                  <-Select Operator [SEL_190] (rows=8000000 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_189] (rows=8000000 width=112)
                                        predicate:(ca_gmt_offset = -7)
                                        TableScan [TS_3] (rows=40000000 width=112)
                                          default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_gmt_offset"]
                <-Select Operator [SEL_212] (rows=1 width=224)
                    Output:["_col0","_col1"]
                    Group By Operator [GBY_211] (rows=1 width=112)
                      Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                    <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                      PARTITION_ONLY_SHUFFLE [RS_42]
                        Group By Operator [GBY_41] (rows=1 width=112)
                          Output:["_col0"],aggregations:["sum(_col8)"]
                          Merge Join Operator [MERGEJOIN_157] (rows=505397 width=0)
                            Conds:RS_37._col0=RS_207._col2(Inner),Output:["_col8"]
                          <-Map 8 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_207]
                              PartitionCols:_col2
                              Map Join Operator [MAPJOIN_206] (rows=2526982 width=0)
                                Conds:MAPJOIN_205._col4=RS_200._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col5"]
                              <-Map 12 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_200]
                                  PartitionCols:_col0
                                  Select Operator [SEL_199] (rows=2300 width=4)
                                    Output:["_col0"]
                                    Filter Operator [FIL_198] (rows=2300 width=259)
                                      predicate:((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y'))
                                      TableScan [TS_18] (rows=2300 width=259)
                                        default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:["p_promo_sk","p_channel_dmail","p_channel_email","p_channel_tv"]
                              <-Map Join Operator [MAPJOIN_205] (rows=2526982 width=0)
                                  Conds:MAPJOIN_204._col3=RS_187._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4","_col5"]
                                <-Map 11 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_187]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_186]
                                <-Map Join Operator [MAPJOIN_204] (rows=12627499 width=0)
                                    Conds:MAPJOIN_203._col1=RS_183._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col4","_col5"]
                                  <-Map 10 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_183]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_182]
                                  <-Map Join Operator [MAPJOIN_203] (rows=13119234 width=4)
                                      Conds:SEL_202._col0=RS_179._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4","_col5"]
                                    <-Map 9 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_179]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_178]
                                    <-Select Operator [SEL_202] (rows=479120970 width=126)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                        Filter Operator [FIL_201] (rows=479120970 width=126)
                                          predicate:(ss_customer_sk is not null and ss_promo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                          TableScan [TS_6] (rows=575995635 width=126)
                                            default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_promo_sk","ss_ext_sales_price"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_37]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_147] (rows=16000001 width=4)
                                Conds:RS_174._col1=RS_191._col0(Inner),Output:["_col0"]
                              <-Map 6 [SIMPLE_EDGE] vectorized
                                PARTITION_ONLY_SHUFFLE [RS_191]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_190]

