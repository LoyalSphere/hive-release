PREHOOK: query: explain
WITH web_v1 as (
select
  ws_item_sk item_sk, d_date,
  sum(sum(ws_sales_price))
      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from web_sales
    ,date_dim
where ws_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ws_item_sk is not NULL
group by ws_item_sk, d_date),
store_v1 as (
select
  ss_item_sk item_sk, d_date,
  sum(sum(ss_sales_price))
      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from store_sales
    ,date_dim
where ss_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ss_item_sk is not NULL
group by ss_item_sk, d_date)
 select  *
from (select item_sk
     ,d_date
     ,web_sales
     ,store_sales
     ,max(web_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative
     ,max(store_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative
     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk
                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date
                 ,web.cume_sales web_sales
                 ,store.cume_sales store_sales
           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk
                                                          and web.d_date = store.d_date)
          )x )y
where web_cumulative > store_cumulative
order by item_sk
        ,d_date
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@mv_store_sales_item_customer
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
WITH web_v1 as (
select
  ws_item_sk item_sk, d_date,
  sum(sum(ws_sales_price))
      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from web_sales
    ,date_dim
where ws_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ws_item_sk is not NULL
group by ws_item_sk, d_date),
store_v1 as (
select
  ss_item_sk item_sk, d_date,
  sum(sum(ss_sales_price))
      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from store_sales
    ,date_dim
where ss_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ss_item_sk is not NULL
group by ss_item_sk, d_date)
 select  *
from (select item_sk
     ,d_date
     ,web_sales
     ,store_sales
     ,max(web_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative
     ,max(store_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative
     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk
                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date
                 ,web.cume_sales web_sales
                 ,store.cume_sales store_sales
           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk
                                                          and web.d_date = store.d_date)
          )x )y
where web_cumulative > store_cumulative
order by item_sk
        ,d_date
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@mv_store_sales_item_customer
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE)
Map 6 <- Map 9 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_97]
        Limit [LIM_96] (rows=100 width=190)
          Number of rows:100
          Select Operator [SEL_95] (rows=1147751 width=188)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_94]
              Select Operator [SEL_93] (rows=1147751 width=188)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Filter Operator [FIL_92] (rows=1147751 width=8036039207854)
                  predicate:(max_window_0 > max_window_1)
                  PTF Operator [PTF_91] (rows=3443255 width=0)
                    Function definitions:[{},{"name:":"windowingtablefunction","order by:":"CASE WHEN (_col1 is not null) THEN (_col1) ELSE (_col4) END ASC NULLS FIRST","partition by:":"CASE WHEN (_col0 is not null) THEN (_col0) ELSE (_col3) END"}]
                    Select Operator [SEL_90] (rows=3443255 width=0)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_43]
                        PartitionCols:CASE WHEN (_col0 is not null) THEN (_col0) ELSE (_col3) END
                        Merge Join Operator [MERGEJOIN_66] (rows=3443255 width=0)
                          Conds:RS_40._col0, _col1=RS_89._col0, _col1(Outer),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_40]
                            PartitionCols:_col0, _col1
                            Select Operator [SEL_17] (rows=3442937 width=210)
                              Output:["_col0","_col1","_col2"]
                              PTF Operator [PTF_16] (rows=3442937 width=210)
                                Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col1 ASC NULLS FIRST","partition by:":"_col0"}]
                                Group By Operator [GBY_12] (rows=3442937 width=210)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_82]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_81] (rows=24992810 width=210)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)"],keys:_col1, _col4
                                      Map Join Operator [MAPJOIN_80] (rows=24992810 width=209)
                                        Conds:SEL_79._col0=RS_74._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col4"]
                                      <-Map 6 [BROADCAST_EDGE] vectorized
                                        SHUFFLE [RS_74]
                                          PartitionCols:_col0
                                          Select Operator [SEL_73] (rows=317 width=98)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_72] (rows=317 width=102)
                                              predicate:d_month_seq BETWEEN 1212 AND 1223
                                              TableScan [TS_3] (rows=73049 width=102)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date","d_month_seq"]
                                              <-Map 9 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_71]
                                                  PartitionCols:_col2
                                                  Select Operator [SEL_70] (rows=1 width=120)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_69] (rows=1 width=120)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_23] (rows=1 width=120)
                                                        default@mv_store_sales_item_customer,default.mv_store_sales_item_customer,Tbl:COMPLETE,Col:PARTIAL,Output:["ss_item_sk","ss_sales_price"]
                                      <-Select Operator [SEL_79] (rows=143966864 width=119)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_78] (rows=143966864 width=119)
                                            predicate:ws_sold_date_sk is not null
                                            TableScan [TS_0] (rows=144002668 width=119)
                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_sales_price"]
                        <-Reducer 8 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_89]
                            PartitionCols:_col0, _col1
                            Select Operator [SEL_88] (rows=1 width=210)
                              Output:["_col0","_col1","_col2"]
                              PTF Operator [PTF_87] (rows=1 width=210)
                                Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col0 ASC NULLS FIRST","partition by:":"_col1"}]
                                Select Operator [SEL_86] (rows=1 width=210)
                                  Output:["_col0","_col1","_col2"]
                                <-Reducer 7 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_85]
                                    PartitionCols:_col1
                                    Group By Operator [GBY_84] (rows=1 width=210)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1

