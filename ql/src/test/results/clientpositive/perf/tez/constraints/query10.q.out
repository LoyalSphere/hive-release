PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Walker County','Richland County','Gaines County','Douglas County','Dona Ana County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_moy between 4 and 4+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 ANd 4+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 and 4+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Walker County','Richland County','Gaines County','Douglas County','Dona Ana County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_moy between 4 and 4+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 ANd 4+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 and 4+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 11 <- Map 8 (BROADCAST_EDGE)
Map 4 <- Map 7 (BROADCAST_EDGE), Reducer 10 (BROADCAST_EDGE), Reducer 12 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE)
Map 7 <- Map 8 (BROADCAST_EDGE)
Map 9 <- Map 8 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
Reducer 5 <- Map 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_164]
        Limit [LIM_163] (rows=1 width=419)
          Number of rows:100
          Select Operator [SEL_162] (rows=1 width=419)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_161]
              Select Operator [SEL_160] (rows=1 width=419)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6","_col8","_col10","_col12"]
                Group By Operator [GBY_159] (rows=1 width=379)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                <-Map 4 [SIMPLE_EDGE] vectorized
                  SHUFFLE [RS_158]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                    Group By Operator [GBY_157] (rows=1 width=379)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["count()"],keys:_col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                      Select Operator [SEL_156] (rows=58 width=379)
                        Output:["_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                        Filter Operator [FIL_155] (rows=58 width=379)
                          predicate:(_col15 is not null or _col17 is not null)
                          Map Join Operator [MAPJOIN_154] (rows=58 width=379)
                            Conds:MAPJOIN_153._col0=RS_149._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col15","_col17"]
                          <-Reducer 12 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_149]
                              PartitionCols:_col0
                              Select Operator [SEL_148] (rows=154725 width=7)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_147] (rows=154725 width=3)
                                  Output:["_col0"],keys:KEY._col0
                                <-Map 11 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_146]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_145] (rows=154725 width=3)
                                      Output:["_col0"],keys:_col1
                                      Map Join Operator [MAPJOIN_144] (rows=31162251 width=3)
                                        Conds:SEL_143._col0=RS_127._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                      <-Map 8 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_127]
                                          PartitionCols:_col0
                                          Select Operator [SEL_124] (rows=201 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_123] (rows=201 width=12)
                                              predicate:((d_year = 2002) and d_moy BETWEEN 4 AND 7)
                                              TableScan [TS_11] (rows=73049 width=12)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                      <-Select Operator [SEL_143] (rows=285115246 width=7)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_142] (rows=285115246 width=7)
                                            predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                            TableScan [TS_32] (rows=287989836 width=7)
                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                          <-Map Join Operator [MAPJOIN_153] (rows=58 width=379)
                              Conds:MAPJOIN_152._col0=RS_141._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col15"]
                            <-Reducer 10 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_141]
                                PartitionCols:_col0
                                Select Operator [SEL_140] (rows=155827 width=7)
                                  Output:["_col0","_col1"]
                                  Group By Operator [GBY_139] (rows=155827 width=3)
                                    Output:["_col0"],keys:KEY._col0
                                  <-Map 9 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_138]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_137] (rows=155827 width=3)
                                        Output:["_col0"],keys:_col1
                                        Map Join Operator [MAPJOIN_136] (rows=15843227 width=3)
                                          Conds:SEL_135._col0=RS_126._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                        <-Map 8 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_126]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_124]
                                        <-Select Operator [SEL_135] (rows=143930993 width=7)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_134] (rows=143930993 width=7)
                                              predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                              TableScan [TS_18] (rows=144002668 width=7)
                                                default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                            <-Map Join Operator [MAPJOIN_152] (rows=22703 width=375)
                                Conds:MAPJOIN_151._col0=RS_133._col0(Left Semi),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                              <-Map 7 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_133]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_132] (rows=155827 width=2)
                                    Output:["_col0"],keys:_col0
                                    Select Operator [SEL_131] (rows=57825495 width=2)
                                      Output:["_col0"]
                                      Map Join Operator [MAPJOIN_130] (rows=57825495 width=2)
                                        Conds:SEL_129._col0=RS_125._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                      <-Map 8 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_125]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_124]
                                      <-Select Operator [SEL_129] (rows=525327388 width=7)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_128] (rows=525327388 width=7)
                                            predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                            TableScan [TS_8] (rows=575995635 width=7)
                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk"]
                              <-Map Join Operator [MAPJOIN_151] (rows=228127 width=375)
                                  Conds:RS_49._col1=SEL_150._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                                <-Reducer 2 [BROADCAST_EDGE]
                                  BROADCAST [RS_49]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_102] (rows=224946 width=4)
                                      Conds:RS_119._col2=RS_122._col0(Inner),Output:["_col0","_col1"]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_119]
                                        PartitionCols:_col2
                                        Select Operator [SEL_118] (rows=77201384 width=11)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_117] (rows=77201384 width=11)
                                            predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null)
                                            TableScan [TS_0] (rows=80000000 width=11)
                                              default@customer,c,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                    <-Map 3 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_122]
                                        PartitionCols:_col0
                                        Select Operator [SEL_121] (rows=116550 width=102)
                                          Output:["_col0"]
                                          Filter Operator [FIL_120] (rows=116550 width=102)
                                            predicate:(ca_county) IN ('Walker County', 'Richland County', 'Gaines County', 'Douglas County', 'Dona Ana County')
                                            TableScan [TS_3] (rows=40000000 width=102)
                                              default@customer_address,ca,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county"]
                                <-Select Operator [SEL_150] (rows=1861800 width=375)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                    TableScan [TS_6] (rows=1861800 width=375)
                                      default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating","cd_dep_count","cd_dep_employed_count","cd_dep_college_count"]

