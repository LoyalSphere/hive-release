Warning: Map Join MAPJOIN[185][bigTable=?] in task 'Map 1' is a cross product
Warning: Map Join MAPJOIN[184][bigTable=?] in task 'Map 1' is a cross product
Warning: Map Join MAPJOIN[183][bigTable=?] in task 'Reducer 21' is a cross product
Warning: Shuffle Join MERGEJOIN[186][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Reducer 17 (BROADCAST_EDGE), Reducer 18 (BROADCAST_EDGE)
Map 11 <- Map 12 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Union 10 (CONTAINS)
Map 14 <- Union 10 (BROADCAST_EDGE)
Map 7 <- Map 8 (BROADCAST_EDGE), Reducer 15 (BROADCAST_EDGE)
Map 9 <- Map 12 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Union 10 (CONTAINS)
Reducer 15 <- Map 14 (SIMPLE_EDGE)
Reducer 17 <- Map 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 16 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (XPROD_EDGE), Reducer 21 (XPROD_EDGE)
Reducer 20 <- Map 16 (SIMPLE_EDGE)
Reducer 21 <- Reducer 19 (BROADCAST_EDGE), Reducer 20 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_283]
        Limit [LIM_282] (rows=1 width=16)
          Number of rows:100
          Select Operator [SEL_281] (rows=1 width=16)
            Output:["_col0","_col1","_col2"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_280]
              Select Operator [SEL_279] (rows=1 width=16)
                Output:["_col0","_col1","_col2"]
                Group By Operator [GBY_278] (rows=1 width=12)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 3 [SIMPLE_EDGE] vectorized
                  SHUFFLE [RS_277]
                    PartitionCols:_col0
                    Group By Operator [GBY_276] (rows=1 width=12)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                      Select Operator [SEL_275] (rows=1 width=116)
                        Output:["_col0"]
                        Group By Operator [GBY_274] (rows=1 width=116)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_119]
                            PartitionCols:_col0
                            Group By Operator [GBY_118] (rows=312 width=116)
                              Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                              Select Operator [SEL_117] (rows=624257222 width=127)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_116] (rows=624257222 width=127)
                                  predicate:_col2 BETWEEN _col3 AND _col4
                                  Select Operator [SEL_115] (rows=5618315000 width=127)
                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                    Merge Join Operator [MERGEJOIN_186] (rows=5618315000 width=127)
                                      Conds:(Inner),Output:["_col0","_col2","_col6","_col13","_col15"]
                                    <-Map 1 [XPROD_EDGE] vectorized
                                      XPROD_EDGE [RS_262]
                                        Select Operator [SEL_261] (rows=224732600 width=119)
                                          Output:["_col0","_col4","_col11","_col13"]
                                          Map Join Operator [MAPJOIN_260] (rows=224732600 width=119)
                                            Conds:(Left Outer),Output:["_col2","_col4","_col10","_col13"]
                                          <-Reducer 17 [BROADCAST_EDGE] vectorized
                                            PARTITION_ONLY_SHUFFLE [RS_248]
                                              Group By Operator [GBY_246] (rows=25 width=4)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 16 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_243]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_240] (rows=25 width=4)
                                                    Output:["_col0"],keys:_col0
                                                    Select Operator [SEL_237] (rows=50 width=12)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_236] (rows=50 width=12)
                                                        predicate:((d_moy = 3) and (d_year = 1999))
                                                        TableScan [TS_73] (rows=73049 width=12)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_month_seq","d_year","d_moy"]
                                          <-Map Join Operator [MAPJOIN_259] (rows=8989304 width=8)
                                              Conds:(Inner),Output:["_col2","_col4","_col10"]
                                            <-Reducer 18 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_254]
                                                Select Operator [SEL_253] (rows=1 width=8)
                                                  Filter Operator [FIL_252] (rows=1 width=8)
                                                    predicate:(sq_count_check(_col0) <= 1)
                                                    Group By Operator [GBY_251] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Map Join Operator [MAPJOIN_258] (rows=8989304 width=8)
                                                Conds:MAPJOIN_257._col1=RS_235._col5(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4","_col10"]
                                              <-Map 7 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_235]
                                                  PartitionCols:_col5
                                                  Map Join Operator [MAPJOIN_234] (rows=55046 width=4)
                                                    Conds:MAPJOIN_233._col0=RS_230._col1(Inner),HybridGraceHashJoin:true,Output:["_col5"]
                                                  <-Reducer 15 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_230]
                                                      PartitionCols:_col1
                                                      Select Operator [SEL_229] (rows=55046 width=8)
                                                        Output:["_col0","_col1"]
                                                        Group By Operator [GBY_228] (rows=55046 width=8)
                                                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                        <-Map 14 [SIMPLE_EDGE] vectorized
                                                          SHUFFLE [RS_227]
                                                            PartitionCols:_col0, _col1
                                                            Group By Operator [GBY_226] (rows=55046 width=8)
                                                              Output:["_col0","_col1"],keys:_col10, _col9
                                                              Map Join Operator [MAPJOIN_225] (rows=110092 width=8)
                                                                Conds:Union 10._col1=SEL_224._col0(Inner),HybridGraceHashJoin:true,Output:["_col9","_col10"]
                                                              <-Union 10 [BROADCAST_EDGE]
                                                                <-Map 11 [CONTAINS] vectorized
                                                                  Reduce Output Operator [RS_301]
                                                                    PartitionCols:_col1
                                                                    Map Join Operator [MAPJOIN_300] (rows=110092 width=0)
                                                                      Conds:MAPJOIN_299._col2=RS_291._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                    <-Map 13 [BROADCAST_EDGE] vectorized
                                                                      BROADCAST [RS_291]
                                                                        PartitionCols:_col0
                                                                        Select Operator [SEL_289] (rows=453 width=190)
                                                                          Output:["_col0"]
                                                                          Filter Operator [FIL_288] (rows=453 width=186)
                                                                            predicate:((i_category = 'Jewelry') and (i_class = 'consignment') and i_item_sk is not null)
                                                                            TableScan [TS_46] (rows=462000 width=186)
                                                                              default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_class","i_category"]
                                                                    <-Map Join Operator [MAPJOIN_299] (rows=11665117 width=7)
                                                                        Conds:SEL_298._col0=RS_287._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                                      <-Map 12 [BROADCAST_EDGE] vectorized
                                                                        BROADCAST [RS_287]
                                                                          PartitionCols:_col0
                                                                          Select Operator [SEL_285] (rows=50 width=12)
                                                                            Output:["_col0"]
                                                                            Filter Operator [FIL_284] (rows=50 width=12)
                                                                              predicate:((d_moy = 3) and (d_year = 1999) and d_date_sk is not null)
                                                                              TableScan [TS_43] (rows=73049 width=12)
                                                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                                                      <-Select Operator [SEL_298] (rows=143930993 width=11)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Filter Operator [FIL_297] (rows=143930993 width=11)
                                                                            predicate:(ws_bill_customer_sk is not null and ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                            TableScan [TS_208] (rows=144002668 width=11)
                                                                              Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk"]
                                                                <-Map 9 [CONTAINS] vectorized
                                                                  Reduce Output Operator [RS_296]
                                                                    PartitionCols:_col1
                                                                    Map Join Operator [MAPJOIN_295] (rows=110092 width=0)
                                                                      Conds:MAPJOIN_294._col2=RS_290._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                    <-Map 13 [BROADCAST_EDGE] vectorized
                                                                      BROADCAST [RS_290]
                                                                        PartitionCols:_col0
                                                                         Please refer to the previous Select Operator [SEL_289]
                                                                    <-Map Join Operator [MAPJOIN_294] (rows=11665117 width=7)
                                                                        Conds:SEL_293._col0=RS_286._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                                      <-Map 12 [BROADCAST_EDGE] vectorized
                                                                        BROADCAST [RS_286]
                                                                          PartitionCols:_col0
                                                                           Please refer to the previous Select Operator [SEL_285]
                                                                      <-Select Operator [SEL_293] (rows=285117831 width=11)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Filter Operator [FIL_292] (rows=285117831 width=11)
                                                                            predicate:(cs_bill_customer_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                            TableScan [TS_199] (rows=287989836 width=11)
                                                                              Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk"]
                                                              <-Select Operator [SEL_224] (rows=80000000 width=8)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_223] (rows=80000000 width=8)
                                                                    predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                                                    TableScan [TS_49] (rows=80000000 width=8)
                                                                      default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                                                  <-Map Join Operator [MAPJOIN_233] (rows=39720279 width=4)
                                                      Conds:SEL_232._col1, _col2=RS_222._col0, _col1(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_222]
                                                        PartitionCols:_col0, _col1
                                                        Select Operator [SEL_221] (rows=1704 width=184)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_220] (rows=1704 width=184)
                                                            predicate:(s_county is not null and s_state is not null)
                                                            TableScan [TS_32] (rows=1704 width=184)
                                                              default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_county","s_state"]
                                                    <-Select Operator [SEL_232] (rows=40000000 width=188)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_231] (rows=40000000 width=188)
                                                          predicate:(ca_address_sk is not null and ca_county is not null and ca_state is not null)
                                                          TableScan [TS_29] (rows=40000000 width=188)
                                                            default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county","ca_state"]
                                              <-Map Join Operator [MAPJOIN_257] (rows=525327388 width=114)
                                                  Conds:SEL_256._col0=RS_219._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col4"]
                                                <-Map 6 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_219]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_218] (rows=73049 width=8)
                                                      Output:["_col0","_col1"]
                                                      Filter Operator [FIL_217] (rows=73049 width=8)
                                                        predicate:d_date_sk is not null
                                                        TableScan [TS_26] (rows=73049 width=8)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_month_seq"]
                                                <-Select Operator [SEL_256] (rows=525327388 width=114)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_255] (rows=525327388 width=114)
                                                      predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                      TableScan [TS_23] (rows=575995635 width=114)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk","ss_ext_sales_price"]
                                    <-Reducer 21 [XPROD_EDGE] vectorized
                                      XPROD_EDGE [RS_273]
                                        Map Join Operator [MAPJOIN_272] (rows=25 width=4)
                                          Conds:(Right Outer),Output:["_col0"]
                                        <-Reducer 19 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_268]
                                            Group By Operator [GBY_267] (rows=25 width=4)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Map 16 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_244]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_241] (rows=25 width=4)
                                                  Output:["_col0"],keys:_col0
                                                  Select Operator [SEL_238] (rows=50 width=12)
                                                    Output:["_col0"]
                                                     Please refer to the previous Filter Operator [FIL_236]
                                        <-Select Operator [SEL_271] (rows=1 width=8)
                                            Filter Operator [FIL_270] (rows=1 width=8)
                                              predicate:(sq_count_check(_col0) <= 1)
                                              Group By Operator [GBY_269] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Reducer 20 [CUSTOM_SIMPLE_EDGE] vectorized
                                                PARTITION_ONLY_SHUFFLE [RS_266]
                                                  Group By Operator [GBY_265] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count()"]
                                                    Select Operator [SEL_264] (rows=25 width=4)
                                                      Group By Operator [GBY_263] (rows=25 width=4)
                                                        Output:["_col0"],keys:KEY._col0
                                                      <-Map 16 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_245]
                                                          PartitionCols:_col0
                                                          Group By Operator [GBY_242] (rows=25 width=4)
                                                            Output:["_col0"],keys:_col0
                                                            Select Operator [SEL_239] (rows=50 width=12)
                                                              Output:["_col0"]
                                                               Please refer to the previous Filter Operator [FIL_236]

