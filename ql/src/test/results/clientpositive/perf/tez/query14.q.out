Warning: Map Join MAPJOIN[935][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[934][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[1044][bigTable=?] in task 'Reducer 53' is a cross product
Warning: Map Join MAPJOIN[1045][bigTable=?] in task 'Reducer 53' is a cross product
Warning: Map Join MAPJOIN[1118][bigTable=?] in task 'Reducer 64' is a cross product
Warning: Map Join MAPJOIN[1119][bigTable=?] in task 'Reducer 64' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 39 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 11 <- Map 39 (BROADCAST_EDGE), Union 12 (CONTAINS)
Map 14 <- Map 8 (BROADCAST_EDGE), Union 12 (CONTAINS)
Map 15 <- Map 10 (BROADCAST_EDGE), Union 12 (CONTAINS)
Map 16 <- Map 19 (BROADCAST_EDGE)
Map 20 <- Reducer 32 (BROADCAST_EDGE), Reducer 35 (BROADCAST_EDGE), Reducer 38 (BROADCAST_EDGE)
Map 28 <- Map 39 (BROADCAST_EDGE)
Map 49 <- Map 39 (BROADCAST_EDGE)
Map 50 <- Map 39 (BROADCAST_EDGE)
Map 51 <- Map 39 (BROADCAST_EDGE), Union 52 (CONTAINS)
Map 54 <- Map 8 (BROADCAST_EDGE), Union 52 (CONTAINS)
Map 55 <- Map 10 (BROADCAST_EDGE), Union 52 (CONTAINS)
Map 56 <- Map 39 (BROADCAST_EDGE), Union 57 (CONTAINS)
Map 59 <- Map 8 (BROADCAST_EDGE), Union 57 (CONTAINS)
Map 60 <- Map 10 (BROADCAST_EDGE), Union 57 (CONTAINS)
Map 61 <- Map 19 (BROADCAST_EDGE)
Map 62 <- Map 39 (BROADCAST_EDGE), Union 63 (CONTAINS)
Map 65 <- Map 8 (BROADCAST_EDGE), Union 63 (CONTAINS)
Map 66 <- Map 10 (BROADCAST_EDGE), Union 63 (CONTAINS)
Map 67 <- Map 39 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 7 <- Map 8 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 70 <- Map 8 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 71 <- Map 10 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 72 <- Map 19 (BROADCAST_EDGE)
Map 9 <- Map 10 (BROADCAST_EDGE), Union 2 (CONTAINS)
Reducer 13 <- Union 12 (CUSTOM_SIMPLE_EDGE)
Reducer 17 <- Map 16 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE), Reducer 21 (BROADCAST_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 21 <- Map 20 (SIMPLE_EDGE)
Reducer 22 <- Map 20 (SIMPLE_EDGE)
Reducer 23 <- Map 20 (SIMPLE_EDGE), Map 61 (SIMPLE_EDGE), Reducer 22 (BROADCAST_EDGE)
Reducer 24 <- Reducer 23 (SIMPLE_EDGE)
Reducer 25 <- Map 20 (SIMPLE_EDGE)
Reducer 26 <- Map 20 (SIMPLE_EDGE), Map 72 (SIMPLE_EDGE), Reducer 25 (BROADCAST_EDGE)
Reducer 27 <- Reducer 26 (SIMPLE_EDGE)
Reducer 29 <- Map 28 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 3 <- Reducer 13 (BROADCAST_EDGE), Reducer 18 (BROADCAST_EDGE), Union 2 (CUSTOM_SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 30 <- Reducer 29 (SIMPLE_EDGE), Union 31 (CONTAINS)
Reducer 32 <- Union 31 (SIMPLE_EDGE)
Reducer 33 <- Reducer 29 (SIMPLE_EDGE), Union 34 (CONTAINS)
Reducer 35 <- Union 34 (SIMPLE_EDGE)
Reducer 36 <- Reducer 29 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 38 <- Union 37 (SIMPLE_EDGE)
Reducer 41 <- Map 40 (SIMPLE_EDGE), Map 49 (SIMPLE_EDGE)
Reducer 42 <- Reducer 41 (SIMPLE_EDGE), Union 31 (CONTAINS)
Reducer 43 <- Reducer 41 (SIMPLE_EDGE), Union 34 (CONTAINS)
Reducer 44 <- Reducer 41 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 45 <- Map 40 (SIMPLE_EDGE), Map 50 (SIMPLE_EDGE)
Reducer 46 <- Reducer 45 (SIMPLE_EDGE), Union 31 (CONTAINS)
Reducer 47 <- Reducer 45 (SIMPLE_EDGE), Union 34 (CONTAINS)
Reducer 48 <- Reducer 45 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 53 <- Reducer 24 (BROADCAST_EDGE), Reducer 58 (BROADCAST_EDGE), Union 4 (CONTAINS), Union 52 (CUSTOM_SIMPLE_EDGE)
Reducer 58 <- Union 57 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 64 <- Reducer 27 (BROADCAST_EDGE), Reducer 69 (BROADCAST_EDGE), Union 4 (CONTAINS), Union 63 (CUSTOM_SIMPLE_EDGE)
Reducer 69 <- Union 68 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_1264]
        Limit [LIM_1263] (rows=7 width=209)
          Number of rows:100
          Select Operator [SEL_1262] (rows=7 width=209)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_1261]
              Select Operator [SEL_1260] (rows=7 width=209)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_1259] (rows=7 width=217)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 4 [SIMPLE_EDGE]
                  <-Reducer 3 [CONTAINS] vectorized
                    Reduce Output Operator [RS_1258]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_1257] (rows=7 width=217)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_1256] (rows=1 width=221)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_1255] (rows=1 width=244)
                            predicate:(_col5 > _col1)
                            Map Join Operator [MAPJOIN_1254] (rows=1 width=244)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 18 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_1247]
                                Group By Operator [GBY_1246] (rows=1 width=132)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 17 [SIMPLE_EDGE]
                                  SHUFFLE [RS_182]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_181] (rows=1 width=132)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_179] (rows=1 width=128)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Map Join Operator [MAPJOIN_875] (rows=1 width=128)
                                          Conds:MERGEJOIN_837._col1=RS_1245._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Reducer 21 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_1245]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_1244] (rows=362 width=4)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Map 20 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1241]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_1238] (rows=362 width=4)
                                                  Output:["_col0"],keys:_col0
                                                  Map Join Operator [MAPJOIN_1232] (rows=724 width=4)
                                                    Conds:SEL_1226._col1, _col2, _col3=RS_1211._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                  <-Reducer 32 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_1211]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_1210] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1209] (rows=1 width=20)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_1208] (rows=121728 width=19)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 31 [SIMPLE_EDGE]
                                                            <-Reducer 30 [CONTAINS] vectorized
                                                              Reduce Output Operator [RS_1327]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_1326] (rows=121728 width=19)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1325] (rows=121728 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 29 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_111]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_110] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_839] (rows=14628613 width=11)
                                                                          Conds:RS_1319._col1=RS_1322._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 40 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1322]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_1321] (rows=458612 width=15)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_1320] (rows=458612 width=15)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                TableScan [TS_100] (rows=462000 width=15)
                                                                                  default@item,iss,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                                                        <-Map 28 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1319]
                                                                            PartitionCols:_col1
                                                                            Map Join Operator [MAPJOIN_1318] (rows=14736682 width=4)
                                                                              Conds:SEL_1317._col0=RS_1180._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                            <-Map 39 [BROADCAST_EDGE] vectorized
                                                                              BROADCAST [RS_1180]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_1179] (rows=1957 width=8)
                                                                                  Output:["_col0"]
                                                                                  Filter Operator [FIL_1178] (rows=1957 width=8)
                                                                                    predicate:(d_date_sk is not null and d_year BETWEEN 1999 AND 2001)
                                                                                    TableScan [TS_97] (rows=73049 width=8)
                                                                                      default@date_dim,d1,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                                            <-Select Operator [SEL_1317] (rows=550076554 width=7)
                                                                                Output:["_col0","_col1"]
                                                                                Filter Operator [FIL_1316] (rows=550076554 width=7)
                                                                                  predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                  TableScan [TS_94] (rows=575995635 width=7)
                                                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 42 [CONTAINS] vectorized
                                                              Reduce Output Operator [RS_1340]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_1339] (rows=121728 width=19)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1338] (rows=121728 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 41 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_131]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_130] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_841] (rows=7620440 width=11)
                                                                          Conds:RS_1337._col1=RS_1323._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 40 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1323]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_1321]
                                                                        <-Map 49 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1337]
                                                                            PartitionCols:_col1
                                                                            Map Join Operator [MAPJOIN_1336] (rows=7676736 width=4)
                                                                              Conds:SEL_1335._col0=RS_1181._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                            <-Map 39 [BROADCAST_EDGE] vectorized
                                                                              BROADCAST [RS_1181]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_1179]
                                                                            <-Select Operator [SEL_1335] (rows=286549727 width=7)
                                                                                Output:["_col0","_col1"]
                                                                                Filter Operator [FIL_1334] (rows=286549727 width=7)
                                                                                  predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                  TableScan [TS_114] (rows=287989836 width=7)
                                                                                    default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 46 [CONTAINS] vectorized
                                                              Reduce Output Operator [RS_1353]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_1352] (rows=121728 width=19)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1351] (rows=121728 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 45 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_152]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_151] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_843] (rows=3828623 width=11)
                                                                          Conds:RS_1350._col1=RS_1324._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 40 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1324]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_1321]
                                                                        <-Map 50 [SIMPLE_EDGE] vectorized
                                                                          SHUFFLE [RS_1350]
                                                                            PartitionCols:_col1
                                                                            Map Join Operator [MAPJOIN_1349] (rows=3856907 width=4)
                                                                              Conds:SEL_1348._col0=RS_1182._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                            <-Map 39 [BROADCAST_EDGE] vectorized
                                                                              BROADCAST [RS_1182]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_1179]
                                                                            <-Select Operator [SEL_1348] (rows=143966864 width=7)
                                                                                Output:["_col0","_col1"]
                                                                                Filter Operator [FIL_1347] (rows=143966864 width=7)
                                                                                  predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                  TableScan [TS_135] (rows=144002668 width=7)
                                                                                    default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk"]
                                                  <-Select Operator [SEL_1226] (rows=458612 width=15)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_1220] (rows=458612 width=15)
                                                        predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                        TableScan [TS_91] (rows=462000 width=15)
                                                          default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                                        <-Reducer 35 [BROADCAST_EDGE] vectorized
                                                          BROADCAST [RS_1215]
                                                            PartitionCols:_col0, _col1, _col2
                                                            Select Operator [SEL_1214] (rows=1 width=12)
                                                              Output:["_col0","_col1","_col2"]
                                                              Filter Operator [FIL_1213] (rows=1 width=20)
                                                                predicate:(_col3 = 3L)
                                                                Group By Operator [GBY_1212] (rows=121728 width=19)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                <-Union 34 [SIMPLE_EDGE]
                                                                  <-Reducer 33 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1330]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1329] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1328] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 29 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_304]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_110]
                                                                  <-Reducer 43 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1343]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1342] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1341] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 41 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_324]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_130]
                                                                  <-Reducer 47 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1356]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1355] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1354] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 45 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_345]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_151]
                                                        <-Reducer 38 [BROADCAST_EDGE] vectorized
                                                          BROADCAST [RS_1219]
                                                            PartitionCols:_col0, _col1, _col2
                                                            Select Operator [SEL_1218] (rows=1 width=12)
                                                              Output:["_col0","_col1","_col2"]
                                                              Filter Operator [FIL_1217] (rows=1 width=20)
                                                                predicate:(_col3 = 3L)
                                                                Group By Operator [GBY_1216] (rows=121728 width=19)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                <-Union 37 [SIMPLE_EDGE]
                                                                  <-Reducer 36 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1333]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1332] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1331] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 29 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_498]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_110]
                                                                  <-Reducer 44 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1346]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1345] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1344] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 41 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_518]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_130]
                                                                  <-Reducer 48 [CONTAINS] vectorized
                                                                    Reduce Output Operator [RS_1359]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_1358] (rows=121728 width=19)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1357] (rows=121728 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                        <-Reducer 45 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_539]
                                                                            PartitionCols:_col0, _col1, _col2
                                                                             Please refer to the previous Group By Operator [GBY_151]
                                        <-Merge Join Operator [MERGEJOIN_837] (rows=15062131 width=15)
                                            Conds:RS_1207._col1=RS_1233._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                          <-Map 20 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1233]
                                              PartitionCols:_col0
                                              Select Operator [SEL_1227] (rows=462000 width=15)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_1221] (rows=462000 width=15)
                                                  predicate:i_item_sk is not null
                                                   Please refer to the previous TableScan [TS_91]
                                          <-Map 16 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1207]
                                              PartitionCols:_col1
                                              Map Join Operator [MAPJOIN_1206] (rows=15062131 width=4)
                                                Conds:SEL_1205._col0=RS_1201._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                              <-Map 19 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_1201]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_1200] (rows=50 width=12)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_1199] (rows=50 width=12)
                                                      predicate:((d_moy = 11) and (d_year = 2000) and d_date_sk is not null)
                                                      TableScan [TS_85] (rows=73049 width=12)
                                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                              <-Select Operator [SEL_1205] (rows=550076554 width=118)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1204] (rows=550076554 width=118)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_82] (rows=575995635 width=118)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                            <-Map Join Operator [MAPJOIN_1253] (rows=1 width=112)
                                Conds:(Inner),Output:["_col1"]
                              <-Reducer 13 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_1198]
                                  Select Operator [SEL_1197] (rows=1 width=112)
                                    Output:["_col0"]
                                    Group By Operator [GBY_1196] (rows=1 width=120)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                    <-Union 12 [CUSTOM_SIMPLE_EDGE]
                                      <-Map 11 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1301]
                                          Group By Operator [GBY_1300] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1299] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1298] (rows=14736682 width=0)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1297] (rows=14736682 width=0)
                                                  Conds:SEL_1296._col0=RS_1184._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 39 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1184]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1179]
                                                <-Select Operator [SEL_1296] (rows=550076554 width=114)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1295] (rows=550076554 width=114)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_964] (rows=575995635 width=114)
                                                        Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                      <-Map 14 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1308]
                                          Group By Operator [GBY_1307] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1306] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1305] (rows=7676736 width=94)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1304] (rows=7676736 width=94)
                                                  Conds:SEL_1303._col0=RS_1268._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 8 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1268]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_1266] (rows=1957 width=8)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_1265] (rows=1957 width=8)
                                                        predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                        TableScan [TS_13] (rows=73049 width=8)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                <-Select Operator [SEL_1303] (rows=286549727 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1302] (rows=286549727 width=119)
                                                      predicate:cs_sold_date_sk is not null
                                                      TableScan [TS_974] (rows=287989836 width=119)
                                                        Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                      <-Map 15 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1315]
                                          Group By Operator [GBY_1314] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1313] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1312] (rows=3856907 width=114)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1311] (rows=3856907 width=114)
                                                  Conds:SEL_1310._col0=RS_1283._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 10 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1283]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_1281] (rows=1957 width=8)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_1280] (rows=1957 width=8)
                                                        predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                        TableScan [TS_24] (rows=73049 width=8)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                <-Select Operator [SEL_1310] (rows=143966864 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1309] (rows=143966864 width=119)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_984] (rows=144002668 width=119)
                                                        Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                              <-Select Operator [SEL_1252] (rows=1 width=8)
                                  Filter Operator [FIL_1251] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_1250] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_1249] (rows=1 width=8)
                                        Group By Operator [GBY_1248] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 2 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 1 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1195]
                                              Group By Operator [GBY_1194] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1193] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1192] (rows=14736682 width=0)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1191] (rows=14736682 width=0)
                                                      Conds:SEL_1190._col0=RS_1183._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 39 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1183]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1179]
                                                    <-Select Operator [SEL_1190] (rows=550076554 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1189] (rows=550076554 width=7)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_920] (rows=575995635 width=7)
                                                            Output:["ss_sold_date_sk","ss_quantity"]
                                          <-Map 7 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1279]
                                              Group By Operator [GBY_1278] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1277] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1276] (rows=7676736 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1275] (rows=7676736 width=3)
                                                      Conds:SEL_1274._col0=RS_1267._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1267]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1266]
                                                    <-Select Operator [SEL_1274] (rows=286549727 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1273] (rows=286549727 width=7)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_944] (rows=287989836 width=7)
                                                            Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Map 9 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1294]
                                              Group By Operator [GBY_1293] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1292] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1291] (rows=3856907 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1290] (rows=3856907 width=3)
                                                      Conds:SEL_1289._col0=RS_1282._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1282]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1281]
                                                    <-Select Operator [SEL_1289] (rows=143966864 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1288] (rows=143966864 width=7)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_954] (rows=144002668 width=7)
                                                            Output:["ws_sold_date_sk","ws_quantity"]
                  <-Reducer 53 [CONTAINS] vectorized
                    Reduce Output Operator [RS_1388]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_1387] (rows=7 width=217)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_1386] (rows=1 width=223)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_1385] (rows=1 width=244)
                            predicate:(_col5 > _col1)
                            Map Join Operator [MAPJOIN_1384] (rows=1 width=244)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 24 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_1374]
                                Group By Operator [GBY_1373] (rows=1 width=132)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 23 [SIMPLE_EDGE]
                                  SHUFFLE [RS_375]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_374] (rows=1 width=132)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_372] (rows=1 width=128)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Map Join Operator [MAPJOIN_876] (rows=1 width=128)
                                          Conds:MERGEJOIN_852._col1=RS_1368._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Reducer 22 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_1368]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_1367] (rows=362 width=4)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Map 20 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1242]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_1239] (rows=362 width=4)
                                                  Output:["_col0"],keys:_col0
                                                  Map Join Operator [MAPJOIN_1234] (rows=724 width=4)
                                                    Conds:SEL_1228._col1, _col2, _col3=RS_1215._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                  <- Please refer to the previous Reducer 35 [BROADCAST_EDGE]
                                                  <-Select Operator [SEL_1228] (rows=458612 width=15)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_1222] (rows=458612 width=15)
                                                        predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                         Please refer to the previous TableScan [TS_91]
                                        <-Merge Join Operator [MERGEJOIN_852] (rows=7790806 width=110)
                                            Conds:RS_1372._col1=RS_1235._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                          <-Map 20 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1235]
                                              PartitionCols:_col0
                                              Select Operator [SEL_1229] (rows=462000 width=15)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_1223] (rows=462000 width=15)
                                                  predicate:i_item_sk is not null
                                                   Please refer to the previous TableScan [TS_91]
                                          <-Map 61 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1372]
                                              PartitionCols:_col1
                                              Map Join Operator [MAPJOIN_1371] (rows=7790806 width=98)
                                                Conds:SEL_1370._col0=RS_1202._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                              <-Map 19 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_1202]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_1200]
                                              <-Select Operator [SEL_1370] (rows=286549727 width=123)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1369] (rows=286549727 width=123)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_275] (rows=287989836 width=123)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                            <-Map Join Operator [MAPJOIN_1383] (rows=1 width=112)
                                Conds:(Inner),Output:["_col1"]
                              <-Reducer 58 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_1377]
                                  Select Operator [SEL_1376] (rows=1 width=112)
                                    Output:["_col0"]
                                    Group By Operator [GBY_1375] (rows=1 width=120)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                    <-Union 57 [CUSTOM_SIMPLE_EDGE]
                                      <-Map 56 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1409]
                                          Group By Operator [GBY_1408] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1407] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1406] (rows=14736682 width=0)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1405] (rows=14736682 width=0)
                                                  Conds:SEL_1404._col0=RS_1186._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 39 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1186]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1179]
                                                <-Select Operator [SEL_1404] (rows=550076554 width=114)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1403] (rows=550076554 width=114)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_1074] (rows=575995635 width=114)
                                                        Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                      <-Map 59 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1416]
                                          Group By Operator [GBY_1415] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1414] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1413] (rows=7676736 width=94)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1412] (rows=7676736 width=94)
                                                  Conds:SEL_1411._col0=RS_1270._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 8 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1270]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1266]
                                                <-Select Operator [SEL_1411] (rows=286549727 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1410] (rows=286549727 width=119)
                                                      predicate:cs_sold_date_sk is not null
                                                      TableScan [TS_1084] (rows=287989836 width=119)
                                                        Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                      <-Map 60 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1423]
                                          Group By Operator [GBY_1422] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1421] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1420] (rows=3856907 width=114)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1419] (rows=3856907 width=114)
                                                  Conds:SEL_1418._col0=RS_1285._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 10 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1285]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1281]
                                                <-Select Operator [SEL_1418] (rows=143966864 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1417] (rows=143966864 width=119)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_1094] (rows=144002668 width=119)
                                                        Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                              <-Select Operator [SEL_1382] (rows=1 width=8)
                                  Filter Operator [FIL_1381] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_1380] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_1379] (rows=1 width=8)
                                        Group By Operator [GBY_1378] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 52 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 51 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1366]
                                              Group By Operator [GBY_1365] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1364] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1363] (rows=14736682 width=0)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1362] (rows=14736682 width=0)
                                                      Conds:SEL_1361._col0=RS_1185._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 39 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1185]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1179]
                                                    <-Select Operator [SEL_1361] (rows=550076554 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1360] (rows=550076554 width=7)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_1030] (rows=575995635 width=7)
                                                            Output:["ss_sold_date_sk","ss_quantity"]
                                          <-Map 54 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1395]
                                              Group By Operator [GBY_1394] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1393] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1392] (rows=7676736 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1391] (rows=7676736 width=3)
                                                      Conds:SEL_1390._col0=RS_1269._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1269]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1266]
                                                    <-Select Operator [SEL_1390] (rows=286549727 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1389] (rows=286549727 width=7)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_1054] (rows=287989836 width=7)
                                                            Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Map 55 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1402]
                                              Group By Operator [GBY_1401] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1400] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1399] (rows=3856907 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1398] (rows=3856907 width=3)
                                                      Conds:SEL_1397._col0=RS_1284._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1284]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1281]
                                                    <-Select Operator [SEL_1397] (rows=143966864 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1396] (rows=143966864 width=7)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_1064] (rows=144002668 width=7)
                                                            Output:["ws_sold_date_sk","ws_quantity"]
                  <-Reducer 64 [CONTAINS] vectorized
                    Reduce Output Operator [RS_1452]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_1451] (rows=7 width=217)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_1450] (rows=1 width=219)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_1449] (rows=1 width=244)
                            predicate:(_col5 > _col1)
                            Map Join Operator [MAPJOIN_1448] (rows=1 width=244)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 27 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_1438]
                                Group By Operator [GBY_1437] (rows=1 width=132)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 26 [SIMPLE_EDGE]
                                  SHUFFLE [RS_569]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_568] (rows=1 width=132)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_566] (rows=1 width=128)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Map Join Operator [MAPJOIN_877] (rows=1 width=128)
                                          Conds:MERGEJOIN_867._col1=RS_1432._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Reducer 25 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_1432]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_1431] (rows=362 width=4)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Map 20 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1243]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_1240] (rows=362 width=4)
                                                  Output:["_col0"],keys:_col0
                                                  Map Join Operator [MAPJOIN_1236] (rows=724 width=4)
                                                    Conds:SEL_1230._col1, _col2, _col3=RS_1219._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                  <- Please refer to the previous Reducer 38 [BROADCAST_EDGE]
                                                  <-Select Operator [SEL_1230] (rows=458612 width=15)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_1224] (rows=458612 width=15)
                                                        predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                         Please refer to the previous TableScan [TS_91]
                                        <-Merge Join Operator [MERGEJOIN_867] (rows=3942084 width=130)
                                            Conds:RS_1436._col1=RS_1237._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                          <-Map 20 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1237]
                                              PartitionCols:_col0
                                              Select Operator [SEL_1231] (rows=462000 width=15)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_1225] (rows=462000 width=15)
                                                  predicate:i_item_sk is not null
                                                   Please refer to the previous TableScan [TS_91]
                                          <-Map 72 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_1436]
                                              PartitionCols:_col1
                                              Map Join Operator [MAPJOIN_1435] (rows=3942084 width=118)
                                                Conds:SEL_1434._col0=RS_1203._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                              <-Map 19 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_1203]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_1200]
                                              <-Select Operator [SEL_1434] (rows=143966864 width=123)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1433] (rows=143966864 width=123)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_469] (rows=144002668 width=123)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                            <-Map Join Operator [MAPJOIN_1447] (rows=1 width=112)
                                Conds:(Inner),Output:["_col1"]
                              <-Reducer 69 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_1441]
                                  Select Operator [SEL_1440] (rows=1 width=112)
                                    Output:["_col0"]
                                    Group By Operator [GBY_1439] (rows=1 width=120)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                    <-Union 68 [CUSTOM_SIMPLE_EDGE]
                                      <-Map 67 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1473]
                                          Group By Operator [GBY_1472] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1471] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1470] (rows=14736682 width=0)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1469] (rows=14736682 width=0)
                                                  Conds:SEL_1468._col0=RS_1188._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 39 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1188]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1179]
                                                <-Select Operator [SEL_1468] (rows=550076554 width=114)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1467] (rows=550076554 width=114)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_1148] (rows=575995635 width=114)
                                                        Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                      <-Map 70 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1480]
                                          Group By Operator [GBY_1479] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1478] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1477] (rows=7676736 width=94)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1476] (rows=7676736 width=94)
                                                  Conds:SEL_1475._col0=RS_1272._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 8 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1272]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1266]
                                                <-Select Operator [SEL_1475] (rows=286549727 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1474] (rows=286549727 width=119)
                                                      predicate:cs_sold_date_sk is not null
                                                      TableScan [TS_1158] (rows=287989836 width=119)
                                                        Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                      <-Map 71 [CONTAINS] vectorized
                                        Reduce Output Operator [RS_1487]
                                          Group By Operator [GBY_1486] (rows=1 width=120)
                                            Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                            Select Operator [SEL_1485] (rows=26270325 width=44)
                                              Output:["_col0"]
                                              Select Operator [SEL_1484] (rows=3856907 width=114)
                                                Output:["_col0","_col1"]
                                                Map Join Operator [MAPJOIN_1483] (rows=3856907 width=114)
                                                  Conds:SEL_1482._col0=RS_1287._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <-Map 10 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1287]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1281]
                                                <-Select Operator [SEL_1482] (rows=143966864 width=119)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_1481] (rows=143966864 width=119)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_1168] (rows=144002668 width=119)
                                                        Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                              <-Select Operator [SEL_1446] (rows=1 width=8)
                                  Filter Operator [FIL_1445] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_1444] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_1443] (rows=1 width=8)
                                        Group By Operator [GBY_1442] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 63 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 62 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1430]
                                              Group By Operator [GBY_1429] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1428] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1427] (rows=14736682 width=0)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1426] (rows=14736682 width=0)
                                                      Conds:SEL_1425._col0=RS_1187._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 39 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1187]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1179]
                                                    <-Select Operator [SEL_1425] (rows=550076554 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1424] (rows=550076554 width=7)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_1104] (rows=575995635 width=7)
                                                            Output:["ss_sold_date_sk","ss_quantity"]
                                          <-Map 65 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1459]
                                              Group By Operator [GBY_1458] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1457] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1456] (rows=7676736 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1455] (rows=7676736 width=3)
                                                      Conds:SEL_1454._col0=RS_1271._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1271]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1266]
                                                    <-Select Operator [SEL_1454] (rows=286549727 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1453] (rows=286549727 width=7)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_1128] (rows=287989836 width=7)
                                                            Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Map 66 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1466]
                                              Group By Operator [GBY_1465] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_1464] (rows=26270325 width=1)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1463] (rows=3856907 width=3)
                                                    Output:["_col0"]
                                                    Map Join Operator [MAPJOIN_1462] (rows=3856907 width=3)
                                                      Conds:SEL_1461._col0=RS_1286._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1286]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1281]
                                                    <-Select Operator [SEL_1461] (rows=143966864 width=7)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_1460] (rows=143966864 width=7)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_1138] (rows=144002668 width=7)
                                                            Output:["ws_sold_date_sk","ws_quantity"]

