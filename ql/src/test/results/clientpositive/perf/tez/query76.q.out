PREHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 9 <- Map 10 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Union 3 (CONTAINS)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE), Map 14 (BROADCAST_EDGE), Union 3 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE), Map 7 (BROADCAST_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_131]
        Limit [LIM_130] (rows=100 width=408)
          Number of rows:100
          Select Operator [SEL_129] (rows=5600 width=408)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_128]
              Group By Operator [GBY_127] (rows=5600 width=408)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Union 3 [SIMPLE_EDGE]
                <-Map 9 [CONTAINS] vectorized
                  Reduce Output Operator [RS_144]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_143] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_142] (rows=35728 width=394)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Map Join Operator [MAPJOIN_141] (rows=35728 width=209)
                          Conds:MAPJOIN_140._col0=RS_137._col0(Inner),HybridGraceHashJoin:true,Output:["_col3","_col5","_col7","_col8"]
                        <-Map 10 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_137]
                            PartitionCols:_col0
                            Select Operator [SEL_136] (rows=73049 width=12)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_135] (rows=73049 width=12)
                                predicate:d_date_sk is not null
                                TableScan [TS_22] (rows=73049 width=12)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Map Join Operator [MAPJOIN_140] (rows=35728 width=205)
                            Conds:RS_134._col1=SEL_139._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col3","_col5"]
                          <-Map 8 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_134]
                              PartitionCols:_col1
                              Select Operator [SEL_133] (rows=35728 width=119)
                                Output:["_col0","_col1","_col3"]
                                Filter Operator [FIL_132] (rows=35728 width=123)
                                  predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_web_page_sk is null)
                                  TableScan [TS_16] (rows=144002668 width=123)
                                    default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_ext_sales_price"]
                          <-Select Operator [SEL_139] (rows=462000 width=94)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_138] (rows=462000 width=94)
                                predicate:i_item_sk is not null
                                TableScan [TS_100] (rows=462000 width=94)
                                  Output:["i_item_sk","i_category"]
                <-Reducer 12 [CONTAINS]
                  Reduce Output Operator [RS_117]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_116] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_114] (rows=1433911 width=399)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Map Join Operator [MAPJOIN_113] (rows=1433911 width=209)
                          Conds:MERGEJOIN_111._col0=RS_153._col0(Inner),HybridGraceHashJoin:true,Output:["_col3","_col5","_col7","_col8"]
                        <-Map 14 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_153]
                            PartitionCols:_col0
                            Select Operator [SEL_152] (rows=73049 width=12)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_151] (rows=73049 width=12)
                                predicate:d_date_sk is not null
                                TableScan [TS_39] (rows=73049 width=12)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Merge Join Operator [MERGEJOIN_111] (rows=1433911 width=205)
                            Conds:RS_147._col2=RS_150._col0(Inner),Output:["_col0","_col3","_col5"]
                          <-Map 11 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_147]
                              PartitionCols:_col2
                              Select Operator [SEL_146] (rows=1433911 width=119)
                                Output:["_col0","_col2","_col3"]
                                Filter Operator [FIL_145] (rows=1433911 width=123)
                                  predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_warehouse_sk is null)
                                  TableScan [TS_33] (rows=287989836 width=123)
                                    default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_ext_sales_price"]
                          <-Map 13 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_150]
                              PartitionCols:_col0
                              Select Operator [SEL_149] (rows=462000 width=94)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_148] (rows=462000 width=94)
                                  predicate:i_item_sk is not null
                                  TableScan [TS_36] (rows=462000 width=94)
                                    default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                <-Reducer 2 [CONTAINS]
                  Reduce Output Operator [RS_99]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_98] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_96] (rows=24749363 width=387)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Map Join Operator [MAPJOIN_95] (rows=24749363 width=204)
                          Conds:MERGEJOIN_93._col2=RS_126._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col5","_col7","_col8"]
                        <-Map 7 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_126]
                            PartitionCols:_col0
                            Select Operator [SEL_125] (rows=73049 width=12)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_124] (rows=73049 width=12)
                                predicate:d_date_sk is not null
                                TableScan [TS_6] (rows=73049 width=12)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Merge Join Operator [MERGEJOIN_93] (rows=24749363 width=200)
                            Conds:RS_120._col0=RS_123._col1(Inner),Output:["_col1","_col2","_col5"]
                          <-Map 1 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_120]
                              PartitionCols:_col0
                              Select Operator [SEL_119] (rows=462000 width=94)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_118] (rows=462000 width=94)
                                  predicate:i_item_sk is not null
                                  TableScan [TS_0] (rows=462000 width=94)
                                    default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                          <-Map 6 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_123]
                              PartitionCols:_col1
                              Select Operator [SEL_122] (rows=24749363 width=114)
                                Output:["_col0","_col1","_col3"]
                                Filter Operator [FIL_121] (rows=24749363 width=118)
                                  predicate:(ss_addr_sk is null and ss_item_sk is not null and ss_sold_date_sk is not null)
                                  TableScan [TS_3] (rows=575995635 width=118)
                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_addr_sk","ss_ext_sales_price"]

