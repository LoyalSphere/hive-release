Warning: Map Join MAPJOIN[208][bigTable=?] in task 'Reducer 12' is a cross product
PREHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 7 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)
Map 11 <- Map 7 (BROADCAST_EDGE)
Map 13 <- Map 7 (BROADCAST_EDGE)
Map 15 <- Map 18 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE)
Map 19 <- Map 18 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE)
Map 9 <- Map 7 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Reducer 14 (BROADCAST_EDGE), Union 4 (CONTAINS)
Reducer 14 <- Map 13 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE), Reducer 20 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 20 <- Map 19 (SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_251]
        Limit [LIM_250] (rows=100 width=163)
          Number of rows:100
          Select Operator [SEL_249] (rows=956329968 width=163)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_248]
              Select Operator [SEL_247] (rows=956329968 width=163)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_246] (rows=956329968 width=163)
                  Output:["_col0","_col1","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
                <-Union 4 [SIMPLE_EDGE]
                  <-Reducer 12 [CONTAINS] vectorized
                    Reduce Output Operator [RS_268]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_267] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Select Operator [SEL_266] (rows=158394413 width=360)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Map Join Operator [MAPJOIN_265] (rows=158394413 width=360)
                            Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                          <-Reducer 14 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_263]
                              Group By Operator [GBY_262] (rows=1 width=224)
                                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"]
                              <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized
                                PARTITION_ONLY_SHUFFLE [RS_261]
                                  Group By Operator [GBY_260] (rows=1 width=224)
                                    Output:["_col0","_col1"],aggregations:["sum(_col1)","sum(_col2)"]
                                    Map Join Operator [MAPJOIN_259] (rows=31678769 width=106)
                                      Conds:SEL_258._col0=RS_223._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                    <-Map 7 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_223]
                                        PartitionCols:_col0
                                        Select Operator [SEL_219] (rows=8116 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_218] (rows=8116 width=1119)
                                            predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                    <-Select Operator [SEL_258] (rows=28798881 width=106)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_257] (rows=28798881 width=106)
                                          predicate:cr_returned_date_sk is not null
                                          TableScan [TS_58] (rows=28798881 width=106)
                                            default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_returned_date_sk","cr_return_amount","cr_net_loss"]
                          <-Group By Operator [GBY_264] (rows=158394413 width=135)
                              Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                            <-Map 11 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_256]
                                PartitionCols:_col0
                                Group By Operator [GBY_255] (rows=316788826 width=135)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col1
                                  Map Join Operator [MAPJOIN_254] (rows=316788826 width=135)
                                    Conds:SEL_253._col0=RS_222._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                  <-Map 7 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_222]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_219]
                                  <-Select Operator [SEL_253] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_252] (rows=287989836 width=135)
                                        predicate:cs_sold_date_sk is not null
                                        TableScan [TS_44] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_call_center_sk","cs_ext_sales_price","cs_net_profit"]
                  <-Reducer 17 [CONTAINS]
                    Reduce Output Operator [RS_217]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_216] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Select Operator [SEL_214] (rows=95833780 width=135)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Merge Join Operator [MERGEJOIN_213] (rows=95833780 width=135)
                            Conds:RS_280._col0=RS_288._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                          <-Reducer 16 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_280]
                              PartitionCols:_col0
                              Group By Operator [GBY_279] (rows=87121617 width=135)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Map 15 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_278]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_277] (rows=174243235 width=135)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Map Join Operator [MAPJOIN_276] (rows=174243235 width=135)
                                      Conds:MAPJOIN_275._col1=RS_271._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col6"]
                                    <-Map 18 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_271]
                                        PartitionCols:_col0
                                        Select Operator [SEL_270] (rows=4602 width=585)
                                          Output:["_col0"]
                                          Filter Operator [FIL_269] (rows=4602 width=585)
                                            predicate:wp_web_page_sk is not null
                                            TableScan [TS_83] (rows=4602 width=585)
                                              default@web_page,web_page,Tbl:COMPLETE,Col:NONE,Output:["wp_web_page_sk"]
                                    <-Map Join Operator [MAPJOIN_275] (rows=158402938 width=135)
                                        Conds:SEL_274._col0=RS_224._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                      <-Map 7 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_224]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_219]
                                      <-Select Operator [SEL_274] (rows=144002668 width=135)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_273] (rows=144002668 width=135)
                                            predicate:(ws_sold_date_sk is not null and ws_web_page_sk is not null)
                                            TableScan [TS_77] (rows=144002668 width=135)
                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_web_page_sk","ws_ext_sales_price","ws_net_profit"]
                          <-Reducer 20 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_288]
                              PartitionCols:_col0
                              Group By Operator [GBY_287] (rows=8711072 width=92)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Map 19 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_286]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_285] (rows=17422145 width=92)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Map Join Operator [MAPJOIN_284] (rows=17422145 width=92)
                                      Conds:MAPJOIN_283._col1=RS_272._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col6"]
                                    <-Map 18 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_272]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_270]
                                    <-Map Join Operator [MAPJOIN_283] (rows=15838314 width=92)
                                        Conds:SEL_282._col0=RS_225._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                      <-Map 7 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_225]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_219]
                                      <-Select Operator [SEL_282] (rows=14398467 width=92)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_281] (rows=14398467 width=92)
                                            predicate:(wr_returned_date_sk is not null and wr_web_page_sk is not null)
                                            TableScan [TS_97] (rows=14398467 width=92)
                                              default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_returned_date_sk","wr_web_page_sk","wr_return_amt","wr_net_loss"]
                  <-Reducer 3 [CONTAINS]
                    Reduce Output Operator [RS_205]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_204] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Select Operator [SEL_202] (rows=383325119 width=88)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Merge Join Operator [MERGEJOIN_201] (rows=383325119 width=88)
                            Conds:RS_237._col0=RS_245._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                          <-Reducer 10 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_245]
                              PartitionCols:_col0
                              Group By Operator [GBY_244] (rows=34842647 width=77)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Map 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_243]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_242] (rows=69685294 width=77)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Map Join Operator [MAPJOIN_241] (rows=69685294 width=77)
                                      Conds:MAPJOIN_240._col1=RS_229._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col6"]
                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_229]
                                        PartitionCols:_col0
                                        Select Operator [SEL_227] (rows=1704 width=1910)
                                          Output:["_col0"]
                                          Filter Operator [FIL_226] (rows=1704 width=1910)
                                            predicate:s_store_sk is not null
                                            TableScan [TS_6] (rows=1704 width=1910)
                                              default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk"]
                                    <-Map Join Operator [MAPJOIN_240] (rows=63350266 width=77)
                                        Conds:SEL_239._col0=RS_221._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                      <-Map 7 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_221]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_219]
                                      <-Select Operator [SEL_239] (rows=57591150 width=77)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_238] (rows=57591150 width=77)
                                            predicate:(sr_returned_date_sk is not null and sr_store_sk is not null)
                                            TableScan [TS_20] (rows=57591150 width=77)
                                              default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_returned_date_sk","sr_store_sk","sr_return_amt","sr_net_loss"]
                          <-Reducer 2 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_237]
                              PartitionCols:_col0
                              Group By Operator [GBY_236] (rows=348477374 width=88)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_235]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_234] (rows=696954748 width=88)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Map Join Operator [MAPJOIN_233] (rows=696954748 width=88)
                                      Conds:MAPJOIN_232._col1=RS_228._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col6"]
                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_228]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_227]
                                    <-Map Join Operator [MAPJOIN_232] (rows=633595212 width=88)
                                        Conds:SEL_231._col0=RS_220._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                      <-Map 7 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_220]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_219]
                                      <-Select Operator [SEL_231] (rows=575995635 width=88)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_230] (rows=575995635 width=88)
                                            predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                            TableScan [TS_0] (rows=575995635 width=88)
                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_ext_sales_price","ss_net_profit"]

