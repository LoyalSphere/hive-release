PREHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE)
Reducer 10 <- Map 15 (SIMPLE_EDGE), Map 16 (CUSTOM_SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 17 (CUSTOM_SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 3 <- Map 18 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 8 <- Map 11 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 9 <- Map 12 (SIMPLE_EDGE), Map 13 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_184]
        Limit [LIM_183] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_182] (rows=37725837 width=135)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_181]
              Group By Operator [GBY_180] (rows=37725837 width=135)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)","count(VALUE._col1)","count(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Reducer 3 [SIMPLE_EDGE]
                SHUFFLE [RS_69]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_68] (rows=75451675 width=135)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(_col3)","count(_col4)","count()"],keys:_col0, _col1, _col2
                    Select Operator [SEL_66] (rows=75451675 width=135)
                      Output:["_col0","_col1","_col2","_col3","_col4"]
                      Merge Join Operator [MERGEJOIN_141] (rows=75451675 width=135)
                        Conds:RS_63._col4, _col6=RS_179._col0, _col1(Left Outer),Output:["_col13","_col15","_col22","_col28"]
                      <-Map 18 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_179]
                          PartitionCols:_col0, _col1
                          Select Operator [SEL_178] (rows=28798881 width=106)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_177] (rows=28798881 width=106)
                              predicate:cr_item_sk is not null
                              TableScan [TS_60] (rows=28798881 width=106)
                                default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_item_sk","cr_order_number"]
                      <-Reducer 2 [SIMPLE_EDGE]
                        SHUFFLE [RS_63]
                          PartitionCols:_col4, _col6
                          Select Operator [SEL_59] (rows=68592431 width=135)
                            Output:["_col4","_col6","_col13","_col15","_col22","_col28"]
                            Map Join Operator [MAPJOIN_140] (rows=68592431 width=135)
                              BucketMapJoin:true,Conds:FIL_55._col0, _col20=RS_176._col0, _col1(Inner),HybridGraceHashJoin:true,Output:["_col5","_col9","_col14","_col16","_col20","_col26"]
                            <-Map 17 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_176]
                                Select Operator [SEL_175] (rows=73049 width=1119)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_174] (rows=73049 width=1119)
                                    predicate:(d_date_sk is not null and d_week_seq is not null)
                                    TableScan [TS_46] (rows=73049 width=1119)
                                      default@date_dim,d2,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_week_seq"]
                            <-Filter Operator [FIL_55] (rows=62356755 width=135)
                                predicate:(_col3 < _col17)
                                Merge Join Operator [MERGEJOIN_139] (rows=187070265 width=135)
                                  Conds:RS_153._col1=RS_53._col8(Inner),Output:["_col0","_col3","_col5","_col9","_col14","_col16","_col17","_col20","_col26"]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_153]
                                    PartitionCols:_col1
                                    Map Join Operator [MAPJOIN_152] (rows=41342400 width=15)
                                      Conds:SEL_151._col2=RS_149._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col3","_col5"]
                                    <-Map 6 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_149]
                                        PartitionCols:_col0
                                        Select Operator [SEL_148] (rows=27 width=1029)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_147] (rows=27 width=1029)
                                            predicate:w_warehouse_sk is not null
                                            TableScan [TS_3] (rows=27 width=1029)
                                              default@warehouse,warehouse,Tbl:COMPLETE,Col:NONE,Output:["w_warehouse_sk","w_warehouse_name"]
                                    <-Select Operator [SEL_151] (rows=37584000 width=15)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Filter Operator [FIL_150] (rows=37584000 width=15)
                                          predicate:(inv_date_sk is not null and inv_item_sk is not null and inv_warehouse_sk is not null)
                                          TableScan [TS_0] (rows=37584000 width=15)
                                            default@inventory,inventory,Tbl:COMPLETE,Col:NONE,Output:["inv_date_sk","inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]
                                <-Reducer 10 [SIMPLE_EDGE]
                                  SHUFFLE [RS_53]
                                    PartitionCols:_col8
                                    Select Operator [SEL_45] (rows=170063874 width=135)
                                      Output:["_col3","_col8","_col10","_col11","_col14","_col20"]
                                      Filter Operator [FIL_44] (rows=170063874 width=135)
                                        predicate:(UDFToDouble(_col20) > (UDFToDouble(_col9) + 5.0D))
                                        Map Join Operator [MAPJOIN_138] (rows=510191624 width=135)
                                          BucketMapJoin:true,Conds:MERGEJOIN_137._col1=RS_173._col0(Inner),HybridGraceHashJoin:true,Output:["_col4","_col6","_col7","_col9","_col10","_col16","_col18","_col20"]
                                        <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized
                                          PARTITION_ONLY_SHUFFLE [RS_173]
                                            PartitionCols:_col0
                                            Select Operator [SEL_172] (rows=73049 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_171] (rows=73049 width=1119)
                                                predicate:d_date_sk is not null
                                                TableScan [TS_23] (rows=73049 width=1119)
                                                  default@date_dim,d3,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                        <-Merge Join Operator [MERGEJOIN_137] (rows=463810558 width=135)
                                            Conds:RS_38._col4=RS_170._col0(Inner),Output:["_col1","_col4","_col6","_col7","_col9","_col10","_col16","_col18"]
                                          <-Map 15 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_170]
                                              PartitionCols:_col0
                                              Select Operator [SEL_169] (rows=462000 width=1436)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_168] (rows=462000 width=1436)
                                                  predicate:i_item_sk is not null
                                                  TableScan [TS_20] (rows=462000 width=1436)
                                                    default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_desc"]
                                          <-Reducer 9 [SIMPLE_EDGE]
                                            SHUFFLE [RS_38]
                                              PartitionCols:_col4
                                              Map Join Operator [MAPJOIN_135] (rows=421645953 width=135)
                                                Conds:MAPJOIN_134._col5=RS_167._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col1","_col4","_col6","_col7","_col9","_col10","_col16"]
                                              <-Map 14 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_167]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_166] (rows=2300 width=1179)
                                                    Output:["_col0"]
                                                    TableScan [TS_18] (rows=2300 width=1179)
                                                      default@promotion,promotion,Tbl:COMPLETE,Col:NONE,Output:["p_promo_sk"]
                                              <-Map Join Operator [MAPJOIN_134] (rows=383314495 width=135)
                                                  Conds:MERGEJOIN_133._col3=RS_165._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col4","_col5","_col6","_col7","_col9","_col10"]
                                                <-Map 13 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_165]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_164] (rows=3600 width=107)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_163] (rows=3600 width=107)
                                                        predicate:((hd_buy_potential = '1001-5000') and hd_demo_sk is not null)
                                                        TableScan [TS_15] (rows=7200 width=107)
                                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_buy_potential"]
                                                <-Merge Join Operator [MERGEJOIN_133] (rows=348467716 width=135)
                                                    Conds:RS_29._col2=RS_162._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col9","_col10"]
                                                  <-Map 12 [SIMPLE_EDGE] vectorized
                                                    SHUFFLE [RS_162]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_161] (rows=930900 width=385)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_160] (rows=930900 width=385)
                                                          predicate:((cd_marital_status = 'M') and cd_demo_sk is not null)
                                                          TableScan [TS_12] (rows=1861800 width=385)
                                                            default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status"]
                                                  <-Reducer 8 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_29]
                                                      PartitionCols:_col2
                                                      Merge Join Operator [MERGEJOIN_132] (rows=316788826 width=135)
                                                        Conds:RS_156._col0=RS_159._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10"]
                                                      <-Map 11 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_159]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_158] (rows=36524 width=1119)
                                                            Output:["_col0","_col1","_col2"]
                                                            Filter Operator [FIL_157] (rows=36524 width=1119)
                                                              predicate:((d_year = 2001) and d_date_sk is not null and d_week_seq is not null)
                                                              TableScan [TS_9] (rows=73049 width=1119)
                                                                default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date","d_week_seq","d_year"]
                                                      <-Map 7 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_156]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_155] (rows=287989836 width=135)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                            Filter Operator [FIL_154] (rows=287989836 width=135)
                                                              predicate:(cs_bill_cdemo_sk is not null and cs_bill_hdemo_sk is not null and cs_item_sk is not null and cs_ship_date_sk is not null and cs_sold_date_sk is not null)
                                                              TableScan [TS_6] (rows=287989836 width=135)
                                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_ship_date_sk","cs_bill_cdemo_sk","cs_bill_hdemo_sk","cs_item_sk","cs_promo_sk","cs_order_number","cs_quantity"]

