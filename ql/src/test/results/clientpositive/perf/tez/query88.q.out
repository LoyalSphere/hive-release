Warning: Map Join MAPJOIN[347][bigTable=?] in task 'Reducer 2' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 10 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 12 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 14 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 16 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 18 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 6 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 8 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 12 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 14 (CUSTOM_SIMPLE_EDGE)
Reducer 17 <- Map 16 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Reducer 11 (BROADCAST_EDGE), Reducer 13 (BROADCAST_EDGE), Reducer 15 (BROADCAST_EDGE), Reducer 17 (BROADCAST_EDGE), Reducer 19 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)
Reducer 9 <- Map 8 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_496]
        Select Operator [SEL_495] (rows=1 width=65)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Map Join Operator [MAPJOIN_494] (rows=1 width=65)
            Conds:(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 11 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_456]
              Group By Operator [GBY_455] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_454]
                  Group By Operator [GBY_453] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_452] (rows=766650239 width=88)
                      Conds:MAPJOIN_451._col2=RS_418._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_418]
                        PartitionCols:_col0
                        Select Operator [SEL_414] (rows=852 width=1910)
                          Output:["_col0"]
                          Filter Operator [FIL_413] (rows=852 width=1910)
                            predicate:((s_store_name = 'ese') and s_store_sk is not null)
                            TableScan [TS_9] (rows=1704 width=1910)
                              default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name"]
                    <-Map Join Operator [MAPJOIN_451] (rows=696954748 width=88)
                        Conds:MAPJOIN_450._col0=RS_408._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_408]
                          PartitionCols:_col0
                          Select Operator [SEL_400] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_392] (rows=14400 width=471)
                              predicate:((t_hour = 11) and (t_minute < 30) and t_time_sk is not null)
                              TableScan [TS_6] (rows=86400 width=471)
                                default@time_dim,time_dim,Tbl:COMPLETE,Col:NONE,Output:["t_time_sk","t_hour","t_minute"]
                      <-Map Join Operator [MAPJOIN_450] (rows=633595212 width=88)
                          Conds:SEL_449._col1=RS_384._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_384]
                            PartitionCols:_col0
                            Select Operator [SEL_380] (rows=3600 width=107)
                              Output:["_col0"]
                              Filter Operator [FIL_379] (rows=3600 width=107)
                                predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and ((hd_vehicle_count <= 5) or (hd_vehicle_count <= 2) or (hd_vehicle_count <= 3)) and (hd_dep_count) IN (3, 0, 1) and hd_demo_sk is not null)
                                TableScan [TS_3] (rows=7200 width=107)
                                  default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                        <-Select Operator [SEL_449] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_448] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_78] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 13 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_465]
              Group By Operator [GBY_464] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 12 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_463]
                  Group By Operator [GBY_462] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_461] (rows=766650239 width=88)
                      Conds:MAPJOIN_460._col2=RS_419._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_419]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_460] (rows=696954748 width=88)
                        Conds:MAPJOIN_459._col0=RS_409._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_409]
                          PartitionCols:_col0
                          Select Operator [SEL_401] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_393] (rows=14400 width=471)
                              predicate:((t_hour = 10) and (t_minute >= 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_459] (rows=633595212 width=88)
                          Conds:SEL_458._col1=RS_385._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_385]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_458] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_457] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_104] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 15 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_474]
              Group By Operator [GBY_473] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_472]
                  Group By Operator [GBY_471] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_470] (rows=766650239 width=88)
                      Conds:MAPJOIN_469._col2=RS_420._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_420]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_469] (rows=696954748 width=88)
                        Conds:MAPJOIN_468._col0=RS_410._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_410]
                          PartitionCols:_col0
                          Select Operator [SEL_402] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_394] (rows=14400 width=471)
                              predicate:((t_hour = 10) and (t_minute < 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_468] (rows=633595212 width=88)
                          Conds:SEL_467._col1=RS_386._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_386]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_467] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_466] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_130] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 17 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_483]
              Group By Operator [GBY_482] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_481]
                  Group By Operator [GBY_480] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_479] (rows=766650239 width=88)
                      Conds:MAPJOIN_478._col2=RS_421._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_421]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_478] (rows=696954748 width=88)
                        Conds:MAPJOIN_477._col0=RS_411._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_411]
                          PartitionCols:_col0
                          Select Operator [SEL_403] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_395] (rows=14400 width=471)
                              predicate:((t_hour = 9) and (t_minute >= 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_477] (rows=633595212 width=88)
                          Conds:SEL_476._col1=RS_387._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_387]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_476] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_475] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_156] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 19 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_492]
              Group By Operator [GBY_491] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 18 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_490]
                  Group By Operator [GBY_489] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_488] (rows=766650239 width=88)
                      Conds:MAPJOIN_487._col2=RS_422._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_422]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_487] (rows=696954748 width=88)
                        Conds:MAPJOIN_486._col0=RS_412._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_412]
                          PartitionCols:_col0
                          Select Operator [SEL_404] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_396] (rows=14400 width=471)
                              predicate:((t_hour = 9) and (t_minute < 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_486] (rows=633595212 width=88)
                          Conds:SEL_485._col1=RS_388._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_388]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_485] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_484] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_182] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 7 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_438]
              Group By Operator [GBY_437] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 6 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_436]
                  Group By Operator [GBY_435] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_434] (rows=766650239 width=88)
                      Conds:MAPJOIN_433._col2=RS_416._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_416]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_433] (rows=696954748 width=88)
                        Conds:MAPJOIN_432._col0=RS_406._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_406]
                          PartitionCols:_col0
                          Select Operator [SEL_398] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_390] (rows=14400 width=471)
                              predicate:((t_hour = 12) and (t_minute < 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_432] (rows=633595212 width=88)
                          Conds:SEL_431._col1=RS_382._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_382]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_431] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_430] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_26] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Reducer 9 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_447]
              Group By Operator [GBY_446] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 8 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_445]
                  Group By Operator [GBY_444] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_443] (rows=766650239 width=88)
                      Conds:MAPJOIN_442._col2=RS_417._col0(Inner),HybridGraceHashJoin:true
                    <-Map 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_417]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_414]
                    <-Map Join Operator [MAPJOIN_442] (rows=696954748 width=88)
                        Conds:MAPJOIN_441._col0=RS_407._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 4 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_407]
                          PartitionCols:_col0
                          Select Operator [SEL_399] (rows=14400 width=471)
                            Output:["_col0"]
                            Filter Operator [FIL_391] (rows=14400 width=471)
                              predicate:((t_hour = 11) and (t_minute >= 30) and t_time_sk is not null)
                               Please refer to the previous TableScan [TS_6]
                      <-Map Join Operator [MAPJOIN_441] (rows=633595212 width=88)
                          Conds:SEL_440._col1=RS_383._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 3 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_383]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_380]
                        <-Select Operator [SEL_440] (rows=575995635 width=88)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_439] (rows=575995635 width=88)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_52] (rows=575995635 width=88)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
          <-Group By Operator [GBY_493] (rows=1 width=8)
              Output:["_col0"],aggregations:["count(VALUE._col0)"]
            <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
              PARTITION_ONLY_SHUFFLE [RS_429]
                Group By Operator [GBY_428] (rows=1 width=8)
                  Output:["_col0"],aggregations:["count()"]
                  Map Join Operator [MAPJOIN_427] (rows=766650239 width=88)
                    Conds:MAPJOIN_426._col2=RS_415._col0(Inner),HybridGraceHashJoin:true
                  <-Map 5 [BROADCAST_EDGE] vectorized
                    BROADCAST [RS_415]
                      PartitionCols:_col0
                       Please refer to the previous Select Operator [SEL_414]
                  <-Map Join Operator [MAPJOIN_426] (rows=696954748 width=88)
                      Conds:MAPJOIN_425._col0=RS_405._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                    <-Map 4 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_405]
                        PartitionCols:_col0
                        Select Operator [SEL_397] (rows=14400 width=471)
                          Output:["_col0"]
                          Filter Operator [FIL_389] (rows=14400 width=471)
                            predicate:((t_hour = 8) and (t_minute >= 30) and t_time_sk is not null)
                             Please refer to the previous TableScan [TS_6]
                    <-Map Join Operator [MAPJOIN_425] (rows=633595212 width=88)
                        Conds:SEL_424._col1=RS_381._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                      <-Map 3 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_381]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_380]
                      <-Select Operator [SEL_424] (rows=575995635 width=88)
                          Output:["_col0","_col1","_col2"]
                          Filter Operator [FIL_423] (rows=575995635 width=88)
                            predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                            TableScan [TS_0] (rows=575995635 width=88)
                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]

