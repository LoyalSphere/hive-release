Warning: Map Join MAPJOIN[365][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[364][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[363][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[362][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[361][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[360][bigTable=?] in task 'Reducer 2' is a cross product
Warning: Map Join MAPJOIN[359][bigTable=?] in task 'Reducer 2' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Map 17 (BROADCAST_EDGE), Map 18 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 20 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Map 22 (BROADCAST_EDGE), Map 23 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Reducer 3 (BROADCAST_EDGE), Reducer 4 (BROADCAST_EDGE), Reducer 5 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 9 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_499]
        Select Operator [SEL_498] (rows=1 width=64)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Map Join Operator [MAPJOIN_497] (rows=1 width=64)
            Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 9 [BROADCAST_EDGE] vectorized
            BROADCAST [RS_489]
              Group By Operator [GBY_488] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_475]
                  Group By Operator [GBY_467] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_459] (rows=1352994 width=8)
                      Conds:MAPJOIN_451._col2=RS_440._col0(Inner),HybridGraceHashJoin:true
                    <-Map 26 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_440]
                        PartitionCols:_col0
                        Select Operator [SEL_439] (rows=155 width=91)
                          Output:["_col0"]
                          Filter Operator [FIL_438] (rows=155 width=92)
                            predicate:((s_store_name = 'ese') and s_store_sk is not null)
                            TableScan [TS_191] (rows=1704 width=92)
                              default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                    <-Map Join Operator [MAPJOIN_451] (rows=1842898 width=0)
                        Conds:MAPJOIN_443._col0=RS_437._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 25 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_437]
                          PartitionCols:_col0
                          Select Operator [SEL_436] (rows=1515 width=12)
                            Output:["_col0"]
                            Filter Operator [FIL_435] (rows=1515 width=12)
                              predicate:((t_hour = 9) and (t_minute < 30) and t_time_sk is not null)
                              TableScan [TS_188] (rows=86400 width=12)
                                default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                      <-Map Join Operator [MAPJOIN_443] (rows=56928540 width=4)
                          Conds:SEL_442._col1=RS_392._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                        <-Map 10 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_392]
                            PartitionCols:_col0
                            Select Operator [SEL_391] (rows=817 width=12)
                              Output:["_col0"]
                              Filter Operator [FIL_390] (rows=817 width=12)
                                predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and ((hd_vehicle_count <= 5) or (hd_vehicle_count <= 2) or (hd_vehicle_count <= 3)) and (hd_dep_count) IN (3, 0, 1) and hd_demo_sk is not null)
                                TableScan [TS_3] (rows=7200 width=12)
                                  default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                        <-Select Operator [SEL_442] (rows=501695814 width=11)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_441] (rows=501695814 width=11)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_0] (rows=575995635 width=11)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                              <-Map 11 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_395]
                                  PartitionCols:_col0
                                  Select Operator [SEL_394] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_393] (rows=1515 width=12)
                                      predicate:((t_hour = 8) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_6] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 12 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_398]
                                  PartitionCols:_col0
                                  Select Operator [SEL_397] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_396] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_9] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 13 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_401]
                                  PartitionCols:_col0
                                  Select Operator [SEL_400] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_399] (rows=1515 width=12)
                                      predicate:((t_hour = 12) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_32] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 14 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_404]
                                  PartitionCols:_col0
                                  Select Operator [SEL_403] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_402] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_35] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 15 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_407]
                                  PartitionCols:_col0
                                  Select Operator [SEL_406] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_405] (rows=1515 width=12)
                                      predicate:((t_hour = 11) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_58] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 16 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_410]
                                  PartitionCols:_col0
                                  Select Operator [SEL_409] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_408] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_61] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 17 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_413]
                                  PartitionCols:_col0
                                  Select Operator [SEL_412] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_411] (rows=1515 width=12)
                                      predicate:((t_hour = 11) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_84] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 18 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_416]
                                  PartitionCols:_col0
                                  Select Operator [SEL_415] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_414] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_87] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 19 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_419]
                                  PartitionCols:_col0
                                  Select Operator [SEL_418] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_417] (rows=1515 width=12)
                                      predicate:((t_hour = 10) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_110] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 20 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_422]
                                  PartitionCols:_col0
                                  Select Operator [SEL_421] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_420] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_113] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 21 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_425]
                                  PartitionCols:_col0
                                  Select Operator [SEL_424] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_423] (rows=1515 width=12)
                                      predicate:((t_hour = 10) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_136] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 22 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_428]
                                  PartitionCols:_col0
                                  Select Operator [SEL_427] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_426] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_139] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 23 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_431]
                                  PartitionCols:_col0
                                  Select Operator [SEL_430] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_429] (rows=1515 width=12)
                                      predicate:((t_hour = 9) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_162] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 24 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_434]
                                  PartitionCols:_col0
                                  Select Operator [SEL_433] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_432] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_165] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
          <-Map Join Operator [MAPJOIN_496] (rows=1 width=56)
              Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
            <-Reducer 8 [BROADCAST_EDGE] vectorized
              BROADCAST [RS_487]
                Group By Operator [GBY_486] (rows=1 width=8)
                  Output:["_col0"],aggregations:["count(VALUE._col0)"]
                <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                  PARTITION_ONLY_SHUFFLE [RS_474]
                    Group By Operator [GBY_466] (rows=1 width=8)
                      Output:["_col0"],aggregations:["count()"]
                      Map Join Operator [MAPJOIN_458] (rows=1352994 width=8)
                        Conds:MAPJOIN_450._col2=RS_434._col0(Inner),HybridGraceHashJoin:true
                      <- Please refer to the previous Map 24 [BROADCAST_EDGE]
                      <-Map Join Operator [MAPJOIN_450] (rows=1842898 width=0)
                          Conds:MAPJOIN_443._col0=RS_431._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                        <- Please refer to the previous Map 23 [BROADCAST_EDGE]
                           Please refer to the previous Map Join Operator [MAPJOIN_443]
            <-Map Join Operator [MAPJOIN_495] (rows=1 width=48)
                Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
              <-Reducer 7 [BROADCAST_EDGE] vectorized
                BROADCAST [RS_485]
                  Group By Operator [GBY_484] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count(VALUE._col0)"]
                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                    PARTITION_ONLY_SHUFFLE [RS_473]
                      Group By Operator [GBY_465] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count()"]
                        Map Join Operator [MAPJOIN_457] (rows=1352994 width=8)
                          Conds:MAPJOIN_449._col2=RS_428._col0(Inner),HybridGraceHashJoin:true
                        <- Please refer to the previous Map 22 [BROADCAST_EDGE]
                        <-Map Join Operator [MAPJOIN_449] (rows=1842898 width=0)
                            Conds:MAPJOIN_443._col0=RS_425._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                          <- Please refer to the previous Map 21 [BROADCAST_EDGE]
                             Please refer to the previous Map Join Operator [MAPJOIN_443]
              <-Map Join Operator [MAPJOIN_494] (rows=1 width=40)
                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                <-Reducer 6 [BROADCAST_EDGE] vectorized
                  BROADCAST [RS_483]
                    Group By Operator [GBY_482] (rows=1 width=8)
                      Output:["_col0"],aggregations:["count(VALUE._col0)"]
                    <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                      PARTITION_ONLY_SHUFFLE [RS_472]
                        Group By Operator [GBY_464] (rows=1 width=8)
                          Output:["_col0"],aggregations:["count()"]
                          Map Join Operator [MAPJOIN_456] (rows=1352994 width=8)
                            Conds:MAPJOIN_448._col2=RS_422._col0(Inner),HybridGraceHashJoin:true
                          <- Please refer to the previous Map 20 [BROADCAST_EDGE]
                          <-Map Join Operator [MAPJOIN_448] (rows=1842898 width=0)
                              Conds:MAPJOIN_443._col0=RS_419._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                            <- Please refer to the previous Map 19 [BROADCAST_EDGE]
                               Please refer to the previous Map Join Operator [MAPJOIN_443]
                <-Map Join Operator [MAPJOIN_493] (rows=1 width=32)
                    Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                  <-Reducer 5 [BROADCAST_EDGE] vectorized
                    BROADCAST [RS_481]
                      Group By Operator [GBY_480] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                        PARTITION_ONLY_SHUFFLE [RS_471]
                          Group By Operator [GBY_463] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count()"]
                            Map Join Operator [MAPJOIN_455] (rows=1352994 width=8)
                              Conds:MAPJOIN_447._col2=RS_416._col0(Inner),HybridGraceHashJoin:true
                            <- Please refer to the previous Map 18 [BROADCAST_EDGE]
                            <-Map Join Operator [MAPJOIN_447] (rows=1842898 width=0)
                                Conds:MAPJOIN_443._col0=RS_413._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                              <- Please refer to the previous Map 17 [BROADCAST_EDGE]
                                 Please refer to the previous Map Join Operator [MAPJOIN_443]
                  <-Map Join Operator [MAPJOIN_492] (rows=1 width=24)
                      Conds:(Inner),Output:["_col0","_col1","_col2"]
                    <-Reducer 4 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_479]
                        Group By Operator [GBY_478] (rows=1 width=8)
                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                          PARTITION_ONLY_SHUFFLE [RS_470]
                            Group By Operator [GBY_462] (rows=1 width=8)
                              Output:["_col0"],aggregations:["count()"]
                              Map Join Operator [MAPJOIN_454] (rows=1352994 width=8)
                                Conds:MAPJOIN_446._col2=RS_410._col0(Inner),HybridGraceHashJoin:true
                              <- Please refer to the previous Map 16 [BROADCAST_EDGE]
                              <-Map Join Operator [MAPJOIN_446] (rows=1842898 width=0)
                                  Conds:MAPJOIN_443._col0=RS_407._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                <- Please refer to the previous Map 15 [BROADCAST_EDGE]
                                   Please refer to the previous Map Join Operator [MAPJOIN_443]
                    <-Map Join Operator [MAPJOIN_491] (rows=1 width=16)
                        Conds:(Inner),Output:["_col0","_col1"]
                      <-Reducer 3 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_477]
                          Group By Operator [GBY_476] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                            PARTITION_ONLY_SHUFFLE [RS_469]
                              Group By Operator [GBY_461] (rows=1 width=8)
                                Output:["_col0"],aggregations:["count()"]
                                Map Join Operator [MAPJOIN_453] (rows=1352994 width=8)
                                  Conds:MAPJOIN_445._col2=RS_404._col0(Inner),HybridGraceHashJoin:true
                                <- Please refer to the previous Map 14 [BROADCAST_EDGE]
                                <-Map Join Operator [MAPJOIN_445] (rows=1842898 width=0)
                                    Conds:MAPJOIN_443._col0=RS_401._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                  <- Please refer to the previous Map 13 [BROADCAST_EDGE]
                                     Please refer to the previous Map Join Operator [MAPJOIN_443]
                      <-Group By Operator [GBY_490] (rows=1 width=8)
                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                          PARTITION_ONLY_SHUFFLE [RS_468]
                            Group By Operator [GBY_460] (rows=1 width=8)
                              Output:["_col0"],aggregations:["count()"]
                              Map Join Operator [MAPJOIN_452] (rows=1352994 width=8)
                                Conds:MAPJOIN_444._col2=RS_398._col0(Inner),HybridGraceHashJoin:true
                              <- Please refer to the previous Map 12 [BROADCAST_EDGE]
                              <-Map Join Operator [MAPJOIN_444] (rows=1842898 width=0)
                                  Conds:MAPJOIN_443._col0=RS_395._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                <- Please refer to the previous Map 11 [BROADCAST_EDGE]
                                   Please refer to the previous Map Join Operator [MAPJOIN_443]

