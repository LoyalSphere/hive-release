Warning: Shuffle Join MERGEJOIN[347][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6, $hdt$_7]] in Stage 'Reducer 6' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 11 <- Map 30 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 14 <- Map 30 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 17 <- Map 30 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 28 (SIMPLE_EDGE)
Reducer 20 <- Map 30 (SIMPLE_EDGE), Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (CUSTOM_SIMPLE_EDGE)
Reducer 22 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 23 <- Map 30 (SIMPLE_EDGE), Reducer 22 (SIMPLE_EDGE)
Reducer 24 <- Reducer 23 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 26 <- Map 30 (SIMPLE_EDGE), Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 30 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 12 (CUSTOM_SIMPLE_EDGE), Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 18 (CUSTOM_SIMPLE_EDGE), Reducer 21 (CUSTOM_SIMPLE_EDGE), Reducer 24 (CUSTOM_SIMPLE_EDGE), Reducer 27 (CUSTOM_SIMPLE_EDGE), Reducer 5 (CUSTOM_SIMPLE_EDGE), Reducer 9 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 29 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 8 <- Map 30 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_218]
        Select Operator [SEL_217] (rows=1 width=65)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Merge Join Operator [MERGEJOIN_347] (rows=1 width=65)
            Conds:(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 12 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_393]
              Group By Operator [GBY_392] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_75]
                  Group By Operator [GBY_74] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_331] (rows=766650239 width=88)
                      Conds:RS_70._col2=RS_382._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_382]
                        PartitionCols:_col0
                        Select Operator [SEL_379] (rows=852 width=1910)
                          Output:["_col0"]
                          Filter Operator [FIL_378] (rows=852 width=1910)
                            predicate:((s_store_name = 'ese') and s_store_sk is not null)
                            TableScan [TS_9] (rows=1704 width=1910)
                              default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name"]
                    <-Reducer 10 [SIMPLE_EDGE]
                      SHUFFLE [RS_70]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_330] (rows=696954748 width=88)
                          Conds:RS_67._col0=RS_372._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_372]
                            PartitionCols:_col0
                            Select Operator [SEL_364] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_356] (rows=14400 width=471)
                                predicate:((t_hour = 11) and (t_minute >= 30) and t_time_sk is not null)
                                TableScan [TS_6] (rows=86400 width=471)
                                  default@time_dim,time_dim,Tbl:COMPLETE,Col:NONE,Output:["t_time_sk","t_hour","t_minute"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_67]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_323] (rows=633595212 width=88)
                              Conds:RS_350._col1=RS_353._col0(Inner),Output:["_col0","_col2"]
                            <-Map 1 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_350]
                                PartitionCols:_col1
                                Select Operator [SEL_349] (rows=575995635 width=88)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_348] (rows=575995635 width=88)
                                    predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                                    TableScan [TS_0] (rows=575995635 width=88)
                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                            <-Map 28 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_353]
                                PartitionCols:_col0
                                Select Operator [SEL_352] (rows=2000 width=107)
                                  Output:["_col0"]
                                  Filter Operator [FIL_351] (rows=2000 width=107)
                                    predicate:((((hd_dep_count = 3) and hd_vehicle_count is not null) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and (hd_dep_count) IN (3, 0, 1) and (hd_vehicle_count <= 5) and hd_demo_sk is not null)
                                    TableScan [TS_3] (rows=7200 width=107)
                                      default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
          <-Reducer 15 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_395]
              Group By Operator [GBY_394] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 14 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_101]
                  Group By Operator [GBY_100] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_334] (rows=766650239 width=88)
                      Conds:RS_96._col2=RS_383._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_383]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 13 [SIMPLE_EDGE]
                      SHUFFLE [RS_96]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_333] (rows=696954748 width=88)
                          Conds:RS_93._col0=RS_373._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_373]
                            PartitionCols:_col0
                            Select Operator [SEL_365] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_357] (rows=14400 width=471)
                                predicate:((t_hour = 11) and (t_minute < 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_93]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 18 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_397]
              Group By Operator [GBY_396] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 17 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_127]
                  Group By Operator [GBY_126] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_337] (rows=766650239 width=88)
                      Conds:RS_122._col2=RS_384._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_384]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 16 [SIMPLE_EDGE]
                      SHUFFLE [RS_122]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_336] (rows=696954748 width=88)
                          Conds:RS_119._col0=RS_374._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_374]
                            PartitionCols:_col0
                            Select Operator [SEL_366] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_358] (rows=14400 width=471)
                                predicate:((t_hour = 10) and (t_minute >= 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_119]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 21 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_399]
              Group By Operator [GBY_398] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 20 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_153]
                  Group By Operator [GBY_152] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_340] (rows=766650239 width=88)
                      Conds:RS_148._col2=RS_385._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_385]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 19 [SIMPLE_EDGE]
                      SHUFFLE [RS_148]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_339] (rows=696954748 width=88)
                          Conds:RS_145._col0=RS_375._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_375]
                            PartitionCols:_col0
                            Select Operator [SEL_367] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_359] (rows=14400 width=471)
                                predicate:((t_hour = 10) and (t_minute < 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_145]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 24 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_401]
              Group By Operator [GBY_400] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 23 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_179]
                  Group By Operator [GBY_178] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_343] (rows=766650239 width=88)
                      Conds:RS_174._col2=RS_386._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_386]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 22 [SIMPLE_EDGE]
                      SHUFFLE [RS_174]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_342] (rows=696954748 width=88)
                          Conds:RS_171._col0=RS_376._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_376]
                            PartitionCols:_col0
                            Select Operator [SEL_368] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_360] (rows=14400 width=471)
                                predicate:((t_hour = 9) and (t_minute >= 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_171]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 27 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_403]
              Group By Operator [GBY_402] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 26 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_205]
                  Group By Operator [GBY_204] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_346] (rows=766650239 width=88)
                      Conds:RS_200._col2=RS_387._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_387]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 25 [SIMPLE_EDGE]
                      SHUFFLE [RS_200]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_345] (rows=696954748 width=88)
                          Conds:RS_197._col0=RS_377._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_377]
                            PartitionCols:_col0
                            Select Operator [SEL_369] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_361] (rows=14400 width=471)
                                predicate:((t_hour = 9) and (t_minute < 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_197]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 5 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_389]
              Group By Operator [GBY_388] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_23]
                  Group By Operator [GBY_22] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_325] (rows=766650239 width=88)
                      Conds:RS_18._col2=RS_380._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_380]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_18]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_324] (rows=696954748 width=88)
                          Conds:RS_15._col0=RS_370._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_370]
                            PartitionCols:_col0
                            Select Operator [SEL_362] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_354] (rows=14400 width=471)
                                predicate:((t_hour = 8) and (t_minute >= 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_15]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]
          <-Reducer 9 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_391]
              Group By Operator [GBY_390] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 8 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_49]
                  Group By Operator [GBY_48] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_328] (rows=766650239 width=88)
                      Conds:RS_44._col2=RS_381._col0(Inner)
                    <-Map 30 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_381]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_379]
                    <-Reducer 7 [SIMPLE_EDGE]
                      SHUFFLE [RS_44]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_327] (rows=696954748 width=88)
                          Conds:RS_41._col0=RS_371._col0(Inner),Output:["_col2"]
                        <-Map 29 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_371]
                            PartitionCols:_col0
                            Select Operator [SEL_363] (rows=14400 width=471)
                              Output:["_col0"]
                              Filter Operator [FIL_355] (rows=14400 width=471)
                                predicate:((t_hour = 12) and (t_minute < 30) and t_time_sk is not null)
                                 Please refer to the previous TableScan [TS_6]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_41]
                            PartitionCols:_col0
                             Please refer to the previous Merge Join Operator [MERGEJOIN_323]

